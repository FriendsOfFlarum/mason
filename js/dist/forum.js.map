{"version":3,"sources":["webpack://@flagrow/mason/webpack/bootstrap","webpack://@flagrow/mason/./forum.js","webpack://@flagrow/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/mason/./src/forum/addComposerFields.js","webpack://@flagrow/mason/./src/forum/addFieldUpdateControl.js","webpack://@flagrow/mason/./src/forum/addFieldsOnDiscussionHero.js","webpack://@flagrow/mason/./src/forum/addFieldsOnDiscussionPost.js","webpack://@flagrow/mason/./src/forum/components/FieldEditDropdown.js","webpack://@flagrow/mason/./src/forum/components/FieldEditTags.js","webpack://@flagrow/mason/./src/forum/components/FieldEditText.js","webpack://@flagrow/mason/./src/forum/components/FieldGrid.js","webpack://@flagrow/mason/./src/forum/components/FieldsEditor.js","webpack://@flagrow/mason/./src/forum/components/FieldsEditorModal.js","webpack://@flagrow/mason/./src/forum/components/FieldsViewer.js","webpack://@flagrow/mason/./src/forum/helpers/chunkArray.js","webpack://@flagrow/mason/./src/forum/index.js","webpack://@flagrow/mason/./src/forum/patchModelIdentifier.js","webpack://@flagrow/mason/./src/lib/helpers/sortByAttribute.js","webpack://@flagrow/mason/./src/lib/models/Answer.js","webpack://@flagrow/mason/./src/lib/models/Field.js","webpack://@flagrow/mason/external \"flarum.core.compat['Component']\"","webpack://@flagrow/mason/external \"flarum.core.compat['Model']\"","webpack://@flagrow/mason/external \"flarum.core.compat['app']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/mason/external \"flarum.core.compat['extend']\"","webpack://@flagrow/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/mason/external \"flarum.core.compat['models/Discussion']\"","webpack://@flagrow/mason/external \"flarum.core.compat['models/Forum']\"","webpack://@flagrow/mason/external \"flarum.core.compat['tags/utils/sortTags']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/mixin']\""],"names":["DiscussionComposer","prototype","flagrowMasonAnswers","extend","items","app","forum","canFillFlagrowMasonFields","add","FieldsEditor","component","answers","onchange","ontagchange","tags","data","relationships","DiscussionControls","discussion","canUpdateFlagrowMasonAnswers","Button","children","translator","trans","icon","onclick","modal","show","FieldsEditorModal","DiscussionHero","props","canSeeFlagrowMasonAnswers","attribute","FieldsViewer","showFieldsOnPost","post","number","CommentPost","subtree","check","map","answer","id","join","content","postHeaderIndex","findIndex","item","attrs","className","splice","FieldEditDropdown","init","field","view","selectedAnswerIdsForThisField","suggested_answers","forEach","answerIndex","a","push","m","multiple","event","target","options","option","selected","value","answerId","store","getById","length","disabled","required","hidden","placeholderHidden","selectPlaceholder","sortByAttribute","indexOf","text","name","Component","DiscussionFields","all","selectedTags","filter","tag","canAddToDiscussion","canStartDiscussion","minPrimary","maxPrimary","minSecondary","maxSecondary","isPrimary","sortTags","currentSelectedChild","sort","parent","fieldRequired","fieldLabel","withAttr","find","FieldEditText","answersForThisField","oninput","createRecord","attributes","Model","getIdentifier","placeholder","fieldPlaceholder","FieldGrid","chunkArray","row","fields","answerToFieldIndex","onsubmit","preventDefault","headItems","toArray","fieldItems","updateSelection","fieldAnswers","reverseFieldLookup","concat","ItemList","FieldEditTags","inputAttrs","input","user_values_allowed","description","dirty","processing","title","answersChanged","bind","loading","saveAnswers","save","then","close","redraw","err","Modal","head","fieldsItems","answer_list","show_when_empty","itemsPerChunk","R","i","slice","initializers","models","Field","Answer","Discussion","hasMany","Forum","addComposerFields","addFieldsOnDiscussionHero","addFieldsOnDiscussionPost","addFieldUpdateControl","patchModelIdentifier","override","original","model","exists","type","attr","b","apiEndpoint","mixin","is_suggested","hasOne","min_answers_count","max_answers_count","validation","deleted_at","transformDate","all_answers","computed"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport FieldsEditor from './components/FieldsEditor';\n\nexport default function () {\n    DiscussionComposer.prototype.flagrowMasonAnswers = [];\n\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (!app.forum.canFillFlagrowMasonFields()) {\n            return;\n        }\n\n        items.add('flagrow-mason-fields', FieldsEditor.component({\n            answers: this.flagrowMasonAnswers,\n            onchange: answers => {\n                this.flagrowMasonAnswers = answers;\n            },\n            ontagchange: tags => {\n                this.tags = tags;\n            },\n        }));\n    });\n\n    extend(DiscussionComposer.prototype, 'data', function (data) {\n        if (!app.forum.canFillFlagrowMasonFields()) {\n            return;\n        }\n\n        data.relationships = data.relationships || {};\n        data.relationships.flagrowMasonAnswers = this.flagrowMasonAnswers;\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModal from './components/FieldsEditorModal';\n\nexport default function () {\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n        if (discussion.canUpdateFlagrowMasonAnswers()) {\n            items.add('flagrow-mason-update-answers', Button.component({\n                children: app.translator.trans('flagrow-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-tag',\n                onclick: () => app.modal.show(new FieldsEditorModal({discussion})),\n            }));\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport FieldsViewer from './components/FieldsViewer';\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!this.props.discussion.canSeeFlagrowMasonAnswers() || !app.forum.attribute('flagrow.mason.fields-in-hero')) {\n            return;\n        }\n\n        items.add('flagrow-mason-fields', FieldsViewer.component({\n            discussion: this.props.discussion,\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport CommentPost from 'flarum/components/CommentPost';\nimport FieldsViewer from './components/FieldsViewer';\n\nfunction showFieldsOnPost(post) {\n    // We only add fields to the first post, and only if fields are not displayed in the hero\n    // TODO: what if the first post is deleted ?\n    return post.number() === 1 && !app.forum.attribute('flagrow.mason.fields-in-hero');\n}\n\nexport default function () {\n    extend(CommentPost.prototype, 'init', function () {\n        if (!this.props.post.discussion().canSeeFlagrowMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        this.subtree.check(() => {\n            // Create a string with all answer ids\n            // If answers change this string will be different\n            return this.props.post.discussion().flagrowMasonAnswers().map(answer => answer.id()).join(',');\n        });\n    });\n\n    extend(CommentPost.prototype, 'content', function (content) {\n        if (!this.props.post.discussion().canSeeFlagrowMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        const postHeaderIndex = content.findIndex(item => item.attrs && item.attrs.className === 'Post-header');\n\n        // Insert the new content just after the header\n        // or at the very beginning if the header is not found\n        content.splice(postHeaderIndex === -1 ? 0 : postHeaderIndex + 1, 0, FieldsViewer.component({\n            discussion: this.props.post.discussion(),\n        }));\n    });\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldEditDropdown extends Component {\n    init() {\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        this.onchange = this.props.onchange;\n    }\n\n    view() {\n        let selectedAnswerIdsForThisField = [];\n\n        this.field.suggested_answers().forEach(answer => {\n            const answerIndex = this.answers.findIndex(a => {\n                // Temporary store entries seem to turn into undefined after saving\n                if (typeof a === 'undefined') {\n                    return false;\n                }\n\n                return a.id() === answer.id();\n            });\n\n            if (answerIndex !== -1) {\n                selectedAnswerIdsForThisField.push(answer.id());\n            }\n        });\n\n        return m('span.Select', [\n            m('select.Select-input.FormControl', {\n                multiple: this.field.multiple(),\n                onchange: event => {\n                    let answers = [];\n\n                    for (let option of event.target.options) {\n                        if (option.selected && option.value !== 'none') {\n                            const answerId = option.value;\n\n                            // This will only work with suggested answers for now\n                            // As they are the only ones registered in the store\n                            answers.push(app.store.getById('flagrow-mason-answer', answerId));\n                        }\n                    }\n\n                    this.onchange(answers);\n                },\n            }, [\n                (this.field.multiple() ? null : m('option', {\n                    value: 'none',\n                    selected: selectedAnswerIdsForThisField.length === 0,\n                    disabled: this.field.required(),\n                    hidden: this.placeholderHidden(),\n                }, this.selectPlaceholder())),\n                sortByAttribute(this.field.suggested_answers()).map(\n                    answer => m('option', {\n                        value: answer.id(),\n                        selected: selectedAnswerIdsForThisField.indexOf(answer.id()) !== -1,\n                    }, answer.content())\n                ),\n            ]),\n            icon('fas fa-caret-down', {className: 'Select-caret'}),\n        ]);\n    }\n\n    placeholderHidden() {\n        // If labels are hidden, we need to always show the default value (even if it can't be selected)\n        // Otherwise when the field is \"required\" you can't find the name of the field anymore once something is selected\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.field.required();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            text += this.field.name();\n\n            if (this.field.required()) {\n                text+= ' *';\n            }\n\n            text += ' - ';\n        }\n\n        if (this.field.required()) {\n            text += app.translator.trans('flagrow-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('flagrow-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortTags from 'flarum/tags/utils/sortTags';\n\nexport default class DiscussionFields extends Component {\n    init() {\n        this.tags = app.store.all('tags');\n        this.selectedTags = [];\n\n        if (this.props.discussion) {\n            this.tags = this.tags.filter(tag => tag.canAddToDiscussion() || this.props.discussion.tags().indexOf(tag) !== -1);\n\n            this.selectedTags = this.props.discussion.tags();\n        } else {\n            this.tags = this.tags.filter(tag => tag.canStartDiscussion());\n        }\n\n        this.minPrimary = app.forum.attribute('minPrimaryTags');\n        this.maxPrimary = app.forum.attribute('maxPrimaryTags');\n        this.minSecondary = app.forum.attribute('minSecondaryTags');\n        this.maxSecondary = app.forum.attribute('maxSecondaryTags');\n\n        // If primary tags are disabled, don't offer them\n        if (this.maxPrimary <= 0) {\n            this.tags = this.tags.filter(tag => !tag.isPrimary());\n        }\n\n        // If secondary tags are disabled, don't offer them\n        if (this.maxSecondary <= 0) {\n            this.tags = this.tags.filter(tag => tag.isPrimary());\n        }\n\n        this.tags = sortTags(this.tags);\n    }\n\n    view() {\n        if (this.maxPrimary > 1 || this.maxSecondary > 1) {\n            return m('.Alert', app.translator.trans('flagrow-mason.forum.tags.inadequate-settings'));\n        }\n\n        // We take the first child selected or if none, the first parent selected\n        // Of course this only works if a single tag or tag+parent is selected\n        // Multiple tags are not supported on this selector\n        const currentSelectedChild = this.selectedTags.length ? this.selectedTags.sort(tag => tag.parent() ? -1 : 1)[0].id() : null;\n\n        const required = this.fieldRequired();\n\n        return m('.Mason-Field.Form-group', {\n            className: app.forum.attribute('flagrow.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n        }, [\n            m('label', this.fieldLabel()),\n            m('span.Select', [\n                m('select.Select-input.FormControl', {\n                    onchange: m.withAttr('value', id => {\n                        this.selectedTags = [];\n\n                        if (id !== 'none') {\n                            this.selectedTags.push(this.tags.find(tag => tag.id() === id));\n\n                            const parent = this.selectedTags[0].parent();\n                            if (parent) {\n                                this.selectedTags.push(parent);\n                            }\n                        }\n\n                        this.props.onchange(this.selectedTags);\n                    }),\n                }, [\n                    m('option', {\n                        value: 'none',\n                        selected: this.selectedTags.length === 0,\n                        disabled: required,\n                        hidden: this.placeholderHidden(),\n                    }, this.selectPlaceholder()),\n                    this.tags.map(\n                        tag => {\n                            const parent = tag.parent();\n\n                            return m('option', {\n                                value: tag.id(),\n                                selected: tag.id() === currentSelectedChild,\n                            }, (parent ? parent.name() + ' | ' : '') + tag.name());\n                        }\n                    ),\n                ]),\n                icon('fas fa-caret-down', {className: 'Select-caret'}),\n            ]),\n        ]);\n    }\n\n    fieldRequired() {\n        return this.minPrimary > 0 || this.minSecondary > 0;\n    }\n\n    fieldLabel() {\n        let text = app.forum.attribute('flagrow.mason.tags-field-name') || app.translator.trans('flagrow-mason.forum.tags.tags-label');\n\n        if (this.fieldRequired()) {\n            text += ' *';\n        }\n\n        return text;\n    }\n\n    placeholderHidden() {\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.fieldRequired();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            text += this.fieldLabel() + ' - ';\n        }\n\n        if (this.fieldRequired()) {\n            text += app.translator.trans('flagrow-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('flagrow-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Component from 'flarum/Component';\n\nexport default class FieldEditText extends Component {\n    init() {\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        this.onchange = this.props.onchange;\n\n        this.content = '';\n\n        const answersForThisField = this.answers.filter(answer => {\n            // Temporary store entries seem to turn into undefined after saving\n            if (typeof answer === 'undefined') {\n                return false;\n            }\n\n            return answer.field().id() === this.field.id();\n        });\n\n        if (answersForThisField.length) {\n            // For now we only support a single custom answer\n            this.content = answersForThisField[0].content();\n        }\n    }\n\n    view() {\n        return m('input.FormControl', {\n            required: this.field.required(),\n            value: this.content,\n            oninput: m.withAttr('value', value => {\n                this.content = value;\n\n                if (this.content === '') {\n                    this.onchange([]);\n                } else {\n                    const answer = app.store.createRecord('flagrow-mason-answer', {\n                        attributes: {\n                            content: this.content,\n                        },\n                        relationships: {\n                            field: {\n                                data: Model.getIdentifier(this.field),\n                            },\n                        },\n                    });\n\n                    this.onchange([answer]);\n                }\n            }),\n            placeholder: this.fieldPlaceholder(),\n        });\n    }\n\n    fieldPlaceholder() {\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return this.field.name() + (this.field.required() ? ' *' : '');\n        }\n\n        return '';\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport chunkArray from './../helpers/chunkArray';\n\nexport default class FieldGrid extends Component {\n    view() {\n        return m('.Mason-Grid-Wrapper', m('.Mason-Grid', chunkArray(this.props.items, app.forum.attribute('flagrow.mason.column-count')).map(\n            row => m('.Mason-Row', row.map(\n                item => m('.Mason-Column', item)\n            ))\n        )));\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport FieldEditDropdown from './FieldEditDropdown';\nimport FieldEditText from './FieldEditText';\nimport FieldEditTags from './FieldEditTags';\nimport FieldGrid from './FieldGrid';\n\nexport default class FieldsEditor extends Component {\n    init() {\n        this.fields = sortByAttribute(app.store.all('flagrow-mason-field'));\n\n        // Index to quickly do a reverse lookup from answer to field\n        this.answerToFieldIndex = [];\n        this.fields.forEach(\n            field => {\n                field.suggested_answers().forEach(\n                    answer => {\n                        this.answerToFieldIndex[answer.id()] = field.id();\n                    }\n                );\n            }\n        );\n    }\n\n    view() {\n        return m('form.Mason-Fields.Mason-Fields--editor', {\n            onsubmit(event) {\n                event.preventDefault();\n            },\n        }, [\n            this.headItems().toArray(),\n            FieldGrid.component({\n                items: this.fieldItems().toArray(),\n            }),\n        ]);\n    }\n\n    updateSelection(field, fieldAnswers) {\n        // Keep only answers to other fields\n        let answers = this.props.answers.filter(\n            answer => {\n                const reverseFieldLookup = this.answerToFieldIndex[answer.id()];\n\n                // If the answer is not in the reverse lookup table it's probably a non-suggested (user) answer\n                // In that case the field should be linked in the relationship\n                if (typeof reverseFieldLookup === 'undefined') {\n                    return answer.field().id() !== field.id();\n                }\n\n                return reverseFieldLookup !== field.id();\n            }\n        );\n\n        answers = answers.concat(fieldAnswers);\n\n        this.props.onchange(answers);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('flagrow.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('flagrow.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('flagrow.mason.tags-as-fields')) {\n            items.add('tags', FieldEditTags.component({\n                discussion: this.props.discussion,\n                onchange: tags => {\n                    if (this.props.ontagchange) {\n                        this.props.ontagchange(tags);\n                    }\n                },\n            }));\n        }\n\n        this.fields.forEach(field => {\n            const inputAttrs = {\n                field,\n                answers: this.props.answers,\n                onchange: fieldAnswers => {\n                    // Every input component calls \"onchange\" with a list of answers from the store\n                    this.updateSelection(field, fieldAnswers);\n                },\n            };\n            let input = null;\n\n            if (field.user_values_allowed()) {\n                input = FieldEditText.component(inputAttrs);\n            } else {\n                input = FieldEditDropdown.component(inputAttrs);\n            }\n\n            items.add('field-' + field.id(), m('.Mason-Field.Form-group', {\n                className: app.forum.attribute('flagrow.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n            }, [\n                m('label', [\n                    (field.icon() ? [icon(field.icon()), ' '] : null),\n                    field.name(),\n                    (field.required() ? ' *' : null),\n                ]),\n                input,\n                (field.description() ? m('.helpText', field.description()) : null),\n            ]));\n        });\n\n        return items;\n    }\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport FieldsEditor from './FieldsEditor';\n\nexport default class FieldsEditorModal extends Modal {\n    init() {\n        super.init();\n\n        this.answers = this.props.discussion.flagrowMasonAnswers();\n        this.dirty = false;\n        this.processing = false;\n\n        // Stays null if the feature is not used\n        this.tags = null;\n    }\n\n    title() {\n        return app.translator.trans('flagrow-mason.forum.answers-modal.edit-title', {\n            title: m('em', this.props.discussion.title()),\n        });\n    }\n\n    content() {\n        return [\n            m('.Modal-body', FieldsEditor.component({\n                discussion: this.props.discussion, // Only for the tags feature\n                answers: this.answers,\n                onchange: this.answersChanged.bind(this),\n                ontagchange: tags => {\n                    this.tags = tags;\n                    this.dirty = true;\n                },\n            })),\n            m('.Modal-footer', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.forum.answers-modal.save'),\n                    loading: this.processing,\n                    disabled: !this.dirty,\n                    onclick: this.saveAnswers.bind(this),\n                }),\n            ]),\n        ];\n    }\n\n    answersChanged(answers) {\n        this.answers = answers;\n        this.dirty = true;\n    }\n\n    saveAnswers() {\n        this.processing = true;\n\n        let relationships = {\n            flagrowMasonAnswers: this.answers,\n        };\n\n        // If tag edit is enabled, take care of them here as well\n        if (this.tags !== null) {\n            relationships.tags = this.tags;\n        }\n\n        this.props.discussion.save({\n            relationships,\n        }).then(() => {\n            this.processing = false;\n            app.modal.close();\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n            throw err;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModal from './FieldsEditorModal';\nimport FieldGrid from './FieldGrid';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldsViewer extends Component {\n    init() {\n        this.fields = sortByAttribute(app.store.all('flagrow-mason-field'));\n        this.discussion = this.props.discussion;\n    }\n\n    view() {\n        const head = this.headItems().toArray();\n        const fields = this.fieldsItems().toArray();\n\n        // If all fields are hidden\n        // And either no controls are shown or the setting hides them\n        // We don't show the viewer\n        if (!fields.length && (!head.length || app.forum.attribute('flagrow.mason.hide-empty-fields-section'))) {\n            // We need to return an actual dom element or Flarum does not like it\n            return m('div');\n        }\n\n        return m('.Mason-Fields.Mason-Fields--viewer', [\n            head,\n            FieldGrid.component({\n                items: fields,\n            }),\n        ]);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (this.discussion.canUpdateFlagrowMasonAnswers()) {\n            items.add('edit', Button.component({\n                className: 'Button Mason-Fields--edit',\n                children: app.translator.trans('flagrow-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-pen',\n                onclick: () => app.modal.show(new FieldsEditorModal({\n                    discussion: this.discussion,\n                })),\n            }));\n        }\n\n        if (app.forum.attribute('flagrow.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('flagrow.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldsItems() {\n        const items = new ItemList();\n\n        this.fields.forEach(field => {\n            // Discussion answers to this field\n            const answers = sortByAttribute(this.discussion.flagrowMasonAnswers().filter(answer => {\n                // It's necessary to compare the field() relationship\n                // Because field.suggested_answers() won't contain new and user answers\n                return answer.field().id() === field.id();\n            }));\n\n            let answer_list = answers.map(answer => m('span.Mason-Inline-Answer', answer.content()));\n\n            if (answers.length === 0) {\n                if (field.show_when_empty()) {\n                    answer_list.push(m('em.Mason-Inline-Answer', app.translator.trans('flagrow-mason.forum.post-answers.no-answer')));\n                } else {\n                    // If the field has no answer and the setting is off we don't show it\n                    return;\n                }\n            }\n\n            items.add('field-' + field.id(), m('.Mason-Field.Form-group', [\n                m('label', [\n                    (field.icon() ? [icon(field.icon()), ' '] : null),\n                    field.name(),\n                ]),\n                m('.FormControl.Mason-Inline-Answers', answer_list),\n            ]));\n        });\n\n        return items;\n    }\n}\n","/**\n * Split an array into multiple arrays of a given size\n * Useful for grid layouts\n * @see https://stackoverflow.com/a/10456644/3133038\n * @param {Array} items\n * @param {number} itemsPerChunk\n * @returns {Array}\n */\nexport default function (items, itemsPerChunk) {\n    let R = [];\n    for (let i = 0; i < items.length; i += itemsPerChunk) {\n        R.push(items.slice(i, i + itemsPerChunk));\n    }\n    return R;\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Discussion from 'flarum/models/Discussion';\nimport Forum from 'flarum/models/Forum';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport addComposerFields from './addComposerFields';\nimport addFieldUpdateControl from './addFieldUpdateControl';\nimport addFieldsOnDiscussionHero from './addFieldsOnDiscussionHero';\nimport addFieldsOnDiscussionPost from './addFieldsOnDiscussionPost';\nimport patchModelIdentifier from \"./patchModelIdentifier\";\n\napp.initializers.add('flagrow-mason', app => {\n    app.store.models['flagrow-mason-field'] = Field;\n    app.store.models['flagrow-mason-answer'] = Answer;\n\n    Discussion.prototype.flagrowMasonAnswers = Model.hasMany('flagrowMasonAnswers');\n    Discussion.prototype.canSeeFlagrowMasonAnswers = Model.attribute('canSeeFlagrowMasonAnswers');\n    Discussion.prototype.canUpdateFlagrowMasonAnswers = Model.attribute('canUpdateFlagrowMasonAnswers');\n    Forum.prototype.canFillFlagrowMasonFields = Model.attribute('canFillFlagrowMasonFields');\n\n    addComposerFields();\n    addFieldsOnDiscussionHero();\n    addFieldsOnDiscussionPost();\n    addFieldUpdateControl();\n    patchModelIdentifier();\n});\n","import {override} from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Answer from './../lib/models/Answer';\n\nexport default function () {\n    override(Model, 'getIdentifier', function (original, model) {\n        // For Answers that don't yet exist, we include the content and the field relationship when calling the API\n        // That way they can be created server-side without making individual API requests for each answer\n        if (model instanceof Answer && !model.exists) {\n            return {\n                type: model.data.type,\n                attributes: {\n                    content: model.data.attributes.content,\n                },\n                relationships: {\n                    field: {\n                        data: Model.getIdentifier(model.data.relationships.field),\n                    },\n                },\n            };\n        }\n\n        // Default behaviour\n        return original(model);\n    })\n}\n","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/Forum'];","module.exports = flarum.core.compat['tags/utils/sortTags'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/mixin'];"],"sourceRoot":""}