{"version":3,"sources":["webpack://@fof/mason/webpack/bootstrap","webpack://@fof/mason/external \"flarum.core.compat['app']\"","webpack://@fof/mason/external \"flarum.core.compat['Model']\"","webpack://@fof/mason/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/mason/external \"flarum.core.compat['Component']\"","webpack://@fof/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/mason/external \"flarum.core.compat['components/Button']\"","webpack://@fof/mason/./src/lib/helpers/sortByAttribute.js","webpack://@fof/mason/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/mason/./src/lib/models/Answer.js","webpack://@fof/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/mason/./src/lib/models/Field.js","webpack://@fof/mason/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/mason/external \"flarum.core.compat['components/Select']\"","webpack://@fof/mason/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/mason/./src/admin/components/AnswerEdit.js","webpack://@fof/mason/./src/admin/components/FieldAnswersEdit.js","webpack://@fof/mason/./src/admin/components/FieldEdit.js","webpack://@fof/mason/./src/admin/components/MasonSettings.js","webpack://@fof/mason/./src/admin/pages/MasonFieldsPage.js","webpack://@fof/mason/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","items","attr","sort","a","b","Answer","content","Model","attribute","is_suggested","field","hasOne","apiEndpoint","this","exists","data","id","Field","description","min_answers_count","max_answers_count","show_when_empty","user_values_allowed","validation","icon","deleted_at","transformDate","all_answers","hasMany","suggested_answers","required","computed","multiple","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","store","sortableElement","addEventListener","eventName","callback","length","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","getPropertyValue","parseInt","map","int","isNaN","reduce","sum","_getElementWidth","_getHandles","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","sortableContainer","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","arguments","now","Date","apply","_throttle","buttons","children","_a","_b","classList","remove","add","_removeItemEvents","_removeContainerEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","includes","_makePlaceholder","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","FieldEdit","oninit","vnode","answer","attrs","dirty","processing","view","onclick","newContent","prompt","extractText","app","translator","trans","updateAttribute","title","Switch","component","state","onchange","saveAnswer","Button","className","loading","disabled","readyToSave","deleteAnswer","pushAttributes","save","attributes","then","redraw","err","confirm","Component","FieldAnswersEdit","new_content","showUserAnswers","configSortable","sorting","$","updateSort","oncreate","onupdate","suggestedAnswers","userAnswers","push","sortByAttribute","AnswerEdit","count","oninput","saveField","request","url","forum","body","result","pushPayload","toggleFields","initNewField","createRecord","boxTitle","viewFields","href","iconPreview","deleteField","createNewRecord","preview","MasonSettings","fieldsSectionTitle","settings","columnCount","labelsAsPlaceholders","fieldsInHero","hideEmptyFieldsSection","tagsAsFields","tagsFieldName","columnOptions","updateSetting","Select","setting","saveSettings","MasonFieldsPage","fields","all","fieldsList","ExtensionPage","initializers","models","extensionData","registerPage","registerPermission","label","permission","allowGuest"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Button'];","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","module.exports = flarum.core.compat['components/Switch'];","import Model from 'flarum/Model';\n\nexport default class Answer extends Model {\n    content = Model.attribute('content');\n    is_suggested = Model.attribute('is_suggested');\n    sort = Model.attribute('sort');\n    field = Model.hasOne('field');\n\n    apiEndpoint() {\n        return '/fof/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/extractText'];","import Model from 'flarum/Model';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends Model {\n    name = Model.attribute('name');\n    description = Model.attribute('description');\n    min_answers_count = Model.attribute('min_answers_count');\n    max_answers_count = Model.attribute('max_answers_count');\n    show_when_empty = Model.attribute('show_when_empty');\n    user_values_allowed = Model.attribute('user_values_allowed');\n    validation = Model.attribute('validation');\n    icon = Model.attribute('icon');\n    sort = Model.attribute('sort');\n    deleted_at = Model.attribute('deleted_at', Model.transformDate);\n    all_answers = Model.hasMany('all_answers');\n    suggested_answers = Model.hasMany('suggested_answers');\n    required = computed('min_answers_count', min_answers_count => min_answers_count > 0);\n    multiple = computed('max_answers_count', max_answers_count => max_answers_count > 1);\n\n    apiEndpoint() {\n        return '/fof/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['components/Select'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar _removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData,\n    _removeContainerEvents: _removeContainerEvents\n};\n\nexport default sortable;\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\n\n/* global m */\n\nexport default class FieldEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.answer = this.attrs.answer;\n        this.dirty = false;\n        this.processing = false;\n    }\n\n    view() {\n        return m('.Mason-Box', [\n            // Only suggested answers can be reordered\n            (this.answer.is_suggested() ? [\n                m('span.fas.fa-arrows-alt.Mason-Box--handle.js-answer-handle'),\n                ' ',\n            ] : null),\n            m('span', {\n                onclick: () => {\n                    const newContent = prompt(extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer-prompt')), this.answer.content());\n\n                    if (newContent) {\n                        this.updateAttribute('content', newContent);\n                    }\n                },\n                title: extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer')),\n            }, [\n                this.answer.content(),\n                ' ',\n                icon('fas fa-pen'),\n            ]),\n            Switch.component({\n                state: this.answer.is_suggested(),\n                onchange: value => {\n                    this.updateAttribute('is_suggested', value);\n\n                    // Save right away, because updating the model with immediately trigger a redraw of the UI\n                    // And the unsaved state won't be preserved because the AnswerEdit component changes its place\n                    this.saveAnswer();\n                },\n            }, app.translator.trans('fof-mason.admin.fields.is_suggested')),\n            m('.ButtonGroup', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveAnswer.bind(this),\n                }, app.translator.trans('fof-mason.admin.buttons.save-answer')),\n                Button.component({\n                    className: 'Button Button--danger',\n                    loading: this.processing,\n                    onclick: this.deleteAnswer.bind(this),\n                }, app.translator.trans('fof-mason.admin.buttons.delete-answer')),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.answer.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        return this.dirty;\n    }\n\n    saveAnswer() {\n        this.processing = true;\n\n        this.answer.save(this.answer.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteAnswer() {\n        if (!confirm(extractText(app.translator.trans('fof-mason.admin.messages.delete-answer-confirmation', {\n            content: this.answer.content(),\n        })))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.answer.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport AnswerEdit from './AnswerEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\n/* global m, $ */\n\nexport default class FieldAnswersEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.field = this.attrs.field;\n        this.processing = false;\n        this.new_content = '';\n        this.showUserAnswers = false;\n    }\n\n    configSortable() {\n        const container = this.element.querySelector('.js-answers-container');\n\n        // If the field doesn't exist, it doesn't have a field edit area\n        if (!container) {\n            return;\n        }\n\n        sortable(container, {\n            handle: '.js-answer-handle',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-answer-data')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.configSortable();\n    }\n\n    onupdate() {\n        this.configSortable();\n    }\n\n    view() {\n        if (!this.field.exists) {\n            return m('div', app.translator.trans('fof-mason.admin.fields.save-field-for-answers'));\n        }\n\n        let suggestedAnswers = [];\n        let userAnswers = [];\n\n        this.field.all_answers()\n            .forEach(answer => {\n                // When answers are deleted via store.delete() they stay as an \"undefined\" relationship\n                // We ignore these deleted answers\n                if (typeof answer === 'undefined') {\n                    return;\n                }\n\n                if (answer.is_suggested()) {\n                    suggestedAnswers.push(answer);\n                } else {\n                    userAnswers.push(answer);\n                }\n            });\n\n        return m('div', [\n            m('.Mason-Container.js-answers-container', sortByAttribute(suggestedAnswers).map(\n                answer => m('.js-answer-data', {\n                    key: answer.id(),\n                    'data-id': answer.id(),\n                }, AnswerEdit.component({\n                    answer,\n                }))\n            )),\n            (userAnswers.length ? [\n                m('.Button.Button--block.Mason-Box-Header', {\n                    onclick: () => {\n                        this.showUserAnswers = !this.showUserAnswers;\n                    },\n                }, [\n                    m('.Mason-Box-Header-Title', app.translator.trans('fof-mason.admin.buttons.show-user-answers', {\n                        count: userAnswers.length,\n                    })),\n                    m('div', [\n                        icon('fas fa-chevron-' + (this.showUserAnswers ? 'up' : 'down')),\n                    ]),\n                ]),\n                // The list of user answers can't be re-ordered\n                (this.showUserAnswers ? m('.Mason-Container', sortByAttribute(userAnswers, 'content').map(\n                    answer => m('div', {\n                        key: answer.id(),\n                    }, AnswerEdit.component({\n                        answer,\n                    }))\n                )) : null),\n            ] : null),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.fields.new-answer')),\n                m('input.FormControl', {\n                    value: this.new_content,\n                    oninput: event => {\n                        this.new_content = event.target.value;\n                    },\n                    placeholder: app.translator.trans('fof-mason.admin.fields.new-answer-placeholder'),\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    loading: this.processing,\n                    disabled: !this.new_content,\n                    onclick: this.saveField.bind(this),\n                }, app.translator.trans('fof-mason.admin.buttons.add-answer')),\n            ]),\n        ]);\n    }\n\n    saveField() {\n        this.processing = true;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers',\n            body: {\n                data: {\n                    attributes: {\n                        content: this.new_content,\n                        is_suggested: true,\n                    },\n                },\n            },\n        }).then(result => {\n            app.store.pushPayload(result);\n\n            this.new_content = '';\n            this.processing = false;\n            m.redraw();\n        });\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers/order',\n            body: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\nimport FieldAnswersEdit from './FieldAnswersEdit';\n\n/* global m */\n\nexport default class FieldEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.field = this.attrs.field;\n        this.dirty = false;\n        this.processing = false;\n        this.toggleFields = false;\n\n        if (this.field === null) {\n            this.initNewField();\n        }\n    }\n\n    initNewField() {\n        this.field = app.store.createRecord('mason-fields', {\n            attributes: {\n                name: '',\n                description: '',\n                min_answers_count: 0,\n                max_answers_count: 1, // Currently not visible in the editor\n                user_values_allowed: false,\n                show_when_empty: false,\n                validation: '',\n                icon: '',\n            },\n        });\n    }\n\n    boxTitle() {\n        if (this.field.exists) {\n            return this.field.name();\n        }\n\n        return app.translator.trans('fof-mason.admin.buttons.new-field');\n    }\n\n    view() {\n        return m('.Mason-Box', [\n            (this.field.exists ? m('span.fas.fa-arrows-alt.Mason-Box--handle.js-field-handle') : null),\n            m('.Button.Button--block.Mason-Box-Header', {\n                onclick: () => {\n                    this.toggleFields = !this.toggleFields;\n                },\n            }, [\n                m('.Mason-Box-Header-Title', this.boxTitle()),\n                m('div', [\n                    (this.field.exists ? [\n                        app.translator.trans('fof-mason.admin.buttons.edit-field'),\n                        ' ',\n                    ] : null),\n                    icon('fas fa-chevron-' + (this.toggleFields ? 'up' : 'down')),\n                ]),\n            ]),\n            (this.toggleFields ? this.viewFields() : null),\n        ]);\n    }\n\n    viewFields() {\n        return [\n            m('.Mason-Box--row', [\n                m('.Mason-Box--column', [\n                    m('h4', app.translator.trans('fof-mason.admin.titles.field-settings')),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.name')),\n                        m('input.FormControl', {\n                            value: this.field.name(),\n                            oninput: event => {\n                                this.updateAttribute('name', event.target.value);\n                            },\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.name-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.description')),\n                        m('input.FormControl', {\n                            value: this.field.description(),\n                            oninput: event => {\n                                this.updateAttribute('description', event.target.value);\n                            },\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.description-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            // multi-answers were never implemented so min_answers_count just switches between 0 and 1 for optional and required\n                            Switch.component({\n                                state: this.field.min_answers_count() === 1,\n                                onchange: value => {\n                                    this.updateAttribute('min_answers_count', value ? 1 : 0);\n                                },\n                            }, app.translator.trans('fof-mason.admin.fields.required')),\n                        ]),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.show_when_empty(),\n                                onchange: this.updateAttribute.bind(this, 'show_when_empty'),\n                            }, app.translator.trans('fof-mason.admin.fields.show_when_empty')),\n                        ]),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.show_when_empty-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.user_values_allowed(),\n                                onchange: this.updateAttribute.bind(this, 'user_values_allowed'),\n                            }, app.translator.trans('fof-mason.admin.fields.user_values_allowed')),\n                        ]),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.user_values_allowed-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.validation')),\n                        m('input.FormControl', {\n                            disabled: !this.field.user_values_allowed(),\n                            placeholder: this.field.user_values_allowed() ? '' : app.translator.trans('fof-mason.admin.fields.enable-user-values-for-validation'),\n                            value: this.field.validation(),\n                            oninput: event => {\n                                this.updateAttribute('validation', event.target.value);\n                            },\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.validation-help', {\n                            a: m('a', {\n                                href: 'https://laravel.com/docs/6.x/validation#available-validation-rules',\n                                target: '_blank',\n                            }),\n                        })),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            app.translator.trans('fof-mason.admin.fields.icon'),\n                            this.iconPreview(this.field.icon()),\n                        ]),\n                        m('input.FormControl', {\n                            value: this.field.icon(),\n                            oninput: event => {\n                                this.updateAttribute('icon', event.target.value);\n                            },\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.icon-help', {\n                            a: m('a', {\n                                href: 'https://fontawesome.com/icons?m=free',\n                                target: '_blank',\n                            }),\n                        })),\n                    ]),\n                ]),\n                m('.Mason-Box--column', [\n                    m('h4', app.translator.trans('fof-mason.admin.titles.field-answers')),\n                    m('.Form-group', FieldAnswersEdit.component({\n                        field: this.field,\n                    })),\n                ]),\n            ]),\n            m('.ButtonGroup', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveField.bind(this),\n                }, app.translator.trans('fof-mason.admin.buttons.' + (this.field.exists ? 'save' : 'add') + '-field')),\n                (this.field.exists ? Button.component({\n                    className: 'Button Button--danger',\n                    loading: this.processing,\n                    onclick: this.deleteField.bind(this),\n                }, app.translator.trans('fof-mason.admin.buttons.delete-field')) : ''),\n            ]),\n        ];\n    }\n\n    updateAttribute(attribute, value) {\n        this.field.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        // TODO: check required fields\n        return this.dirty;\n    }\n\n    saveField() {\n        this.processing = true;\n\n        const createNewRecord = !this.field.exists;\n\n        this.field.save(this.field.data.attributes).then(() => {\n            if (createNewRecord) {\n                this.initNewField();\n                this.toggleFields = false;\n            }\n\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteField() {\n        if (!confirm(extractText(app.translator.trans('fof-mason.admin.messages.delete-field-confirmation', {\n            name: this.field.name(),\n        })))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.field.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    iconPreview(value) {\n        if (!value) {\n            return '';\n        }\n\n        return [\n            ' (',\n            app.translator.trans('fof-mason.admin.fields.icon-preview', {\n                preview: icon(value),\n            }),\n            ')',\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport saveSettings from \"flarum/utils/saveSettings\";\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\n\n/* global m */\n\nexport default class MasonSettings extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.fieldsSectionTitle = app.data.settings['fof-mason.fields-section-title'] || '';\n        this.columnCount = app.data.settings['fof-mason.column-count'] || 1;\n        this.labelsAsPlaceholders = app.data.settings['fof-mason.labels-as-placeholders'] > 0;\n        this.fieldsInHero = app.data.settings['fof-mason.fields-in-hero'] > 0;\n        this.hideEmptyFieldsSection = app.data.settings['fof-mason.hide-empty-fields-section'] > 0;\n        this.tagsAsFields = app.data.settings['fof-mason.tags-as-fields'] > 0;\n        this.tagsFieldName = app.data.settings['fof-mason.tags-field-name'] || '';\n\n        this.columnOptions = {};\n\n        for (let i = 1; i <= 3; i++) {\n            this.columnOptions[i] = app.translator.trans('fof-mason.admin.settings.n-columns', {count: i});\n        }\n    }\n\n    view() {\n        return m('.Mason-Container', [\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.fields-section-title')),\n                m('input.FormControl', {\n                    value: this.fieldsSectionTitle,\n                    placeholder: app.translator.trans('fof-mason.admin.settings.fields-section-title-placeholder'),\n                    onchange: event => {\n                        this.updateSetting('fieldsSectionTitle', 'fof-mason.fields-section-title', event.target.value);\n                    },\n                }),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.fields-section-title-help')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.column-count')),\n                Select.component({\n                    options: this.columnOptions,\n                    value: this.columnCount,\n                    onchange: this.updateSetting.bind(this, 'columnCount', 'fof-mason.column-count'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.labelsAsPlaceholders,\n                    onchange: this.updateSetting.bind(this, 'labelsAsPlaceholders', 'fof-mason.labels-as-placeholders'),\n                }, app.translator.trans('fof-mason.admin.settings.labels-as-placeholders'))),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.labels-as-placeholders-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.fieldsInHero,\n                    onchange: this.updateSetting.bind(this, 'fieldsInHero', 'fof-mason.fields-in-hero'),\n                }, app.translator.trans('fof-mason.admin.settings.fields-in-hero'))),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.hideEmptyFieldsSection,\n                    onchange: this.updateSetting.bind(this, 'hideEmptyFieldsSection', 'fof-mason.hide-empty-fields-section'),\n                }, app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section'))),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.tagsAsFields,\n                    onchange: this.updateSetting.bind(this, 'tagsAsFields', 'fof-mason.tags-as-fields'),\n                }, app.translator.trans('fof-mason.admin.settings.tags-as-field'))),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.tags-as-field-help')),\n            ]),\n            (this.tagsAsFields ? m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.tags-field-name')),\n                m('input.FormControl', {\n                    value: this.tagsFieldName,\n                    placeholder: app.translator.trans('fof-mason.admin.settings.tags-field-name-placeholder'),\n                    onchange: event => {\n                        this.updateSetting('tagsFieldName', 'fof-mason.tags-field-name', event.target.value);\n                    },\n                }),\n            ]) : null),\n        ]);\n    }\n\n    /**\n     * Updates setting in database.\n     * @param attribute\n     * @param setting\n     * @param value\n     */\n    updateSetting(attribute, setting, value) {\n        saveSettings({\n            [setting]: value,\n        });\n\n        this[attribute] = value;\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport ExtensionPage from 'flarum/components/ExtensionPage';\nimport FieldEdit from './../components/FieldEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport MasonSettings from './../components/MasonSettings';\n\n/* global m, $ */\n\nexport default class MasonFieldsPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields',\n        }).then(result => {\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    configSortable() {\n        sortable(this.element.querySelector('.js-fields-container'), {\n            handle: '.js-field-handle',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-field-data')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.configSortable();\n    }\n\n    onupdate() {\n        this.configSortable();\n    }\n\n    content() {\n        const fields = app.store.all('mason-fields');\n\n        let fieldsList = [];\n\n        sortByAttribute(fields)\n            .forEach(field => {\n                // Build array of fields to show.\n                fieldsList.push(m('.js-field-data', {\n                    key: field.id(),\n                    'data-id': field.id(),\n                }, FieldEdit.component({\n                    field,\n                })));\n            });\n\n        return m('.ExtensionPage-settings', m('.container', [\n            m('h2', app.translator.trans('fof-mason.admin.titles.fields')),\n            m('.Mason-Container', [\n                m('.js-fields-container', fieldsList),\n                FieldEdit.component({\n                    field: null,\n                }),\n            ]),\n            m('h2', app.translator.trans('fof-mason.admin.titles.settings')),\n            MasonSettings.component(),\n        ]));\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields/order',\n            body: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport MasonFieldsPage from './pages/MasonFieldsPage';\n\napp.initializers.add('fof-mason', () => {\n    app.store.models['mason-fields'] = Field;\n    app.store.models['mason-answers'] = Answer;\n\n    app.extensionData\n        .for('fof-mason')\n        .registerPage(MasonFieldsPage)\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans('fof-mason.admin.permissions.see-own-fields'),\n            permission: 'fof-mason.see-own-fields',\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans('fof-mason.admin.permissions.see-other-fields'),\n            permission: 'fof-mason.see-other-fields',\n            allowGuest: true,\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-tasks',\n            label: app.translator.trans('fof-mason.admin.permissions.fill-fields'),\n            permission: 'fof-mason.fill-fields',\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-edit',\n            label: app.translator.trans('fof-mason.admin.permissions.update-own-fields'),\n            permission: 'fof-mason.update-own-fields',\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-edit',\n            label: app.translator.trans('fof-mason.admin.permissions.update-other-fields'),\n            permission: 'fof-mason.update-other-fields',\n            allowGuest: true,\n        }, 'moderate')\n        .registerPermission({\n            icon: 'fas fa-forward',\n            label: app.translator.trans('fof-mason.admin.permissions.skip-required-fields'),\n            permission: 'fof-mason.skip-required-fields',\n        }, 'moderate');\n});\n"],"sourceRoot":""}