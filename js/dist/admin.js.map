{"version":3,"sources":["webpack://@flagrow/mason/webpack/bootstrap","webpack://@flagrow/mason/./admin.js","webpack://@flagrow/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/mason/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@flagrow/mason/./src/admin/addMasonFieldsPane.js","webpack://@flagrow/mason/./src/admin/addPermissions.js","webpack://@flagrow/mason/./src/admin/components/AnswerEdit.js","webpack://@flagrow/mason/./src/admin/components/FieldAnswersEdit.js","webpack://@flagrow/mason/./src/admin/components/FieldEdit.js","webpack://@flagrow/mason/./src/admin/components/MasonSettings.js","webpack://@flagrow/mason/./src/admin/index.js","webpack://@flagrow/mason/./src/admin/panes/MasonFieldsPane.js","webpack://@flagrow/mason/./src/lib/helpers/sortByAttribute.js","webpack://@flagrow/mason/./src/lib/models/Answer.js","webpack://@flagrow/mason/./src/lib/models/Field.js","webpack://@flagrow/mason/external \"flarum.core.compat['Component']\"","webpack://@flagrow/mason/external \"flarum.core.compat['Model']\"","webpack://@flagrow/mason/external \"flarum.core.compat['app']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Select']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Switch']\"","webpack://@flagrow/mason/external \"flarum.core.compat['extend']\"","webpack://@flagrow/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/mixin']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/saveSettings']\""],"names":["app","routes","path","component","MasonFieldsPane","extensionSettings","m","route","extend","AdminNav","prototype","items","add","AdminLinkButton","href","icon","children","description","translator","trans","PermissionGrid","groups","ItemList","label","permission","allowGuest","toArray","FieldEdit","init","answer","props","dirty","processing","view","is_suggested","onclick","newContent","prompt","content","updateAttribute","Switch","state","onchange","value","saveAnswer","Button","type","className","loading","disabled","readyToSave","bind","deleteAnswer","attribute","pushAttributes","save","data","attributes","then","redraw","err","confirm","Component","FieldAnswersEdit","field","new_content","showUserAnswers","config","sortable","handle","forEach","el","$","off","on","e","sorting","detail","destination","map","item","self","updateSort","exists","suggestedAnswers","userAnswers","all_answers","push","sortByAttribute","key","id","AnswerEdit","length","count","oninput","withAttr","placeholder","saveField","request","method","url","forum","apiEndpoint","result","store","pushPayload","sort","toggleFields","initNewField","createRecord","name","min_answers_count","max_answers_count","user_values_allowed","show_when_empty","validation","boxTitle","viewFields","a","iconPreview","deleteField","createNewRecord","preview","MasonSettings","fieldsSectionTitle","prop","settings","columnCount","labelsAsPlaceholders","fieldsInHero","hideEmptyFieldsSection","tagsAsFields","tagsFieldName","columnOptions","i","updateSetting","Select","options","setting","saveSettings","initializers","models","Field","Answer","addMasonFieldsPane","addPermissions","fields","all","fieldsList","attr","b","mixin","Model","hasOne","deleted_at","transformDate","hasMany","suggested_answers","required","computed","multiple"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sDAAsD,EAAE;AAC7G,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,iCAAiC;AACjC,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,WAAW,kBAAkB;AAC7B,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,+CAA+C,8CAA8C;AAC7F;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,8CAA8C,6CAA6C;;AAE3F;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA,0CAA0C,sEAAsE,uBAAuB,GAAG;AAC1I,+CAA+C,6DAA6D,4BAA4B,GAAG;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sDAAsD,EAAE;AAC5G;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,wDAAwD,sBAAsB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAoD,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,yBAAyB,EAAE;AACjH,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6DAA6D,yBAAyB,EAAE;AACxF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nexport default sortable;\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport MasonFieldsPane from './panes/MasonFieldsPane';\n\nexport default function () {\n    // create the route\n    app.routes['flagrow-mason-fields'] = {\n        path: '/mason',\n        component: MasonFieldsPane.component(),\n    };\n\n    // bind the route we created to the three dots settings button\n    app.extensionSettings['flagrow-mason'] = () => m.route(app.route('flagrow-mason-fields'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        // add the Image Upload tab to the admin navigation menu\n        items.add('flagrow-mason-fields', AdminLinkButton.component({\n            href: app.route('flagrow-mason-fields'),\n            icon: 'fas fa-dungeon',\n            children: 'Mason',\n            description: app.translator.trans('flagrow-mason.admin.menu.description'),\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport ItemList from 'flarum/utils/ItemList';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\n\nexport default function () {\n    extend(PermissionGrid.prototype, 'permissionItems', groups => {\n        const items = new ItemList();\n\n        items.add('see-own-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('flagrow-mason.admin.permissions.see-own-fields'),\n            permission: 'flagrow.mason.see-own-fields',\n        });\n        items.add('see-other-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('flagrow-mason.admin.permissions.see-other-fields'),\n            permission: 'flagrow.mason.see-other-fields',\n            allowGuest: true,\n        });\n        items.add('fill-fields', {\n            icon: 'fas fa-tasks',\n            label: app.translator.trans('flagrow-mason.admin.permissions.fill-fields'),\n            permission: 'flagrow.mason.fill-fields',\n        });\n        items.add('update-own-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('flagrow-mason.admin.permissions.update-own-fields'),\n            permission: 'flagrow.mason.update-own-fields',\n        });\n        items.add('update-other-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('flagrow-mason.admin.permissions.update-other-fields'),\n            permission: 'flagrow.mason.update-other-fields',\n            allowGuest: true,\n        });\n        items.add('skip-required-fields', {\n            icon: 'fas fa-forward',\n            label: app.translator.trans('flagrow-mason.admin.permissions.skip-required-fields'),\n            permission: 'flagrow.mason.skip-required-fields',\n        });\n\n        groups.add('flagrow-mason', {\n            label: app.translator.trans('flagrow-mason.admin.permissions.mason-heading'),\n            children: items.toArray(),\n        });\n    });\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.answer = this.props.answer;\n        this.dirty = false;\n        this.processing = false;\n    }\n\n    view() {\n        return m('form.Mason-Box', [\n            // Only suggested answers can be reordered\n            (this.answer.is_suggested() ? [\n                m('span.fa.fa-arrows-alt-v.Mason-Box--handle.js-answer-handle'),\n                ' ',\n            ] : null),\n            m('span', {\n                onclick: () => {\n                    const newContent = prompt('Edit content', this.answer.content());\n\n                    if (newContent) {\n                        this.updateAttribute('content', newContent);\n                    }\n                },\n            }, [\n                this.answer.content(),\n                ' ',\n                icon('fas fa-pen'),\n            ]),\n            Switch.component({\n                state: this.answer.is_suggested(),\n                onchange: value => {\n                    this.updateAttribute('is_suggested', value);\n\n                    // Save right away, because updating the model with immediately trigger a redraw of the UI\n                    // And the unsaved state won't be preserved because the AnswerEdit component changes its place\n                    this.saveAnswer();\n                },\n                children: app.translator.trans('flagrow-mason.admin.fields.is_suggested'),\n            }),\n            m('.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.save-answer'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveAnswer.bind(this),\n                }),\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.delete-answer'),\n                    loading: this.processing,\n                    onclick: this.deleteAnswer.bind(this),\n                }),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.answer.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        return this.dirty;\n    }\n\n    saveAnswer() {\n        this.processing = true;\n\n        this.answer.save(this.answer.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteAnswer() {\n        if (!confirm(app.translator.trans('flagrow-mason.admin.messages.delete-answer-confirmation', {\n                content: this.answer.content(),\n            }))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.answer.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport AnswerEdit from './AnswerEdit';\nimport sortable from 'html5sortable/dist/html5sortable.es.js';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldAnswersEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.processing = false;\n        this.new_content = '';\n        this.showUserAnswers = false;\n    }\n\n    config() {\n        sortable('.js-answers-container', {\n            handle: '.js-answers-handle',\n            items: '.js-answers-data',\n        }).forEach(function (el) {\n            $(el).off('sortupdate').on('sortupdate', e => {\n                const sorting = e.detail.destination.items\n                    .map(item => {\n                        return $(item).data('id');\n                    });\n\n                self.updateSort(sorting);\n            });\n        });\n    }\n\n    view() {\n        if (!this.field.exists) {\n            return m('div', app.translator.trans('flagrow-mason.admin.fields.save-field-for-answers'));\n        }\n\n        let suggestedAnswers = [];\n        let userAnswers = [];\n\n        this.field.all_answers()\n            .forEach(answer => {\n                // When answers are deleted via store.delete() they stay as an \"undefined\" relationship\n                // We ignore these deleted answers\n                if (typeof answer === 'undefined') {\n                    return;\n                }\n\n                if (answer.is_suggested()) {\n                    suggestedAnswers.push(answer);\n                } else {\n                    userAnswers.push(answer);\n                }\n            });\n\n        return m('div', [\n            m('.Mason-Container.js-answers-container', sortByAttribute(suggestedAnswers).map(\n                answer => m('.js-answer-data', {\n                    key: answer.id(),\n                    'data-id': answer.id(),\n                }, AnswerEdit.component({\n                    answer,\n                }))\n            )),\n            (userAnswers.length ? [\n                m('.Button.Button--block.Mason-Box-Header', {\n                    onclick: () => {\n                        this.showUserAnswers = !this.showUserAnswers;\n                    },\n                }, [\n                    m('.Mason-Box-Header-Title', app.translator.trans('flagrow-mason.admin.buttons.show-user-answers', {\n                        count: userAnswers.length,\n                    })),\n                    m('div', [\n                        icon('fas fa-chevron-' + (this.showUserAnswers ? 'up' : 'down')),\n                    ]),\n                ]),\n                // The list of user answers can't be re-ordered\n                (this.showUserAnswers ? m('.Mason-Container', sortByAttribute(userAnswers, 'content').map(\n                    answer => m('div', {\n                        key: answer.id(),\n                    }, AnswerEdit.component({\n                        answer,\n                    }))\n                )) : null),\n            ] : null),\n            m('form', [\n                m('.Form-group', [\n                    m('label', 'New answer'),\n                    m('input.FormControl', {\n                        value: this.new_content,\n                        oninput: m.withAttr('value', value => {\n                            this.new_content = value;\n                        }),\n                        placeholder: app.translator.trans('flagrow-mason.admin.fields.new-answer-placeholder'),\n                    }),\n                ]),\n                m('.Form-group', [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary',\n                        children: app.translator.trans('flagrow-mason.admin.buttons.add-answer'),\n                        loading: this.processing,\n                        disabled: !this.new_content,\n                        onclick: this.saveField.bind(this),\n                    }),\n                ]),\n            ]),\n        ]);\n    }\n\n    saveField() {\n        this.processing = true;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers',\n            data: {\n                data: {\n                    attributes: {\n                        content: this.new_content,\n                        is_suggested: true,\n                    },\n                },\n            },\n        }).then(result => {\n            app.store.pushPayload(result);\n\n            this.new_content = '';\n            this.processing = false;\n            m.redraw();\n        });\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\nimport FieldAnswersEdit from './FieldAnswersEdit';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.dirty = false;\n        this.processing = false;\n        this.toggleFields = false;\n\n        if (this.field === null) {\n            this.initNewField();\n        }\n    }\n\n    initNewField() {\n        this.field = app.store.createRecord('flagrow-mason-field', {\n            attributes: {\n                name: '',\n                description: '',\n                min_answers_count: 0,\n                max_answers_count: 1,\n                user_values_allowed: false,\n                show_when_empty: false,\n                validation: '',\n                icon: '',\n            },\n        });\n    }\n\n    boxTitle() {\n        if (this.field.exists) {\n            return this.field.name();\n        }\n\n        return app.translator.trans('flagrow-mason.admin.buttons.new-field');\n    }\n\n    view() {\n        return m('.Mason-Box', [\n            (this.field.exists ? m('span.fa.fa-arrows-alt-v.Mason-Box--handle.js-field-handle') : null),\n            m('.Button.Button--block.Mason-Box-Header', {\n                onclick: () => {\n                    this.toggleFields = !this.toggleFields;\n                },\n            }, [\n                m('.Mason-Box-Header-Title', this.boxTitle()),\n                m('div', [\n                    (this.field.exists ? [\n                        app.translator.trans('flagrow-mason.admin.buttons.edit-field'),\n                        ' ',\n                    ] : null),\n                    icon('fas fa-chevron-' + (this.toggleFields ? 'up' : 'down')),\n                ]),\n            ]),\n            (this.toggleFields ? this.viewFields() : null),\n        ]);\n    }\n\n    viewFields() {\n        return m('form', [\n            m('.Mason-Box--row', [\n                m('.Mason-Box--column', [\n                    m('h4', 'Field settings'),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.name')),\n                        m('input.FormControl', {\n                            value: this.field.name(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'name')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.name-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.description')),\n                        m('input.FormControl', {\n                            value: this.field.description(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'description')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.description-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            // TODO: while multiple answers are still in the work, show the \"min answers\" field as a checkbox\n                            Switch.component({\n                                state: this.field.min_answers_count() === 1,\n                                onchange: value => {\n                                    this.updateAttribute('min_answers_count', value ? 1 : 0);\n                                },\n                                children: app.translator.trans('flagrow-mason.admin.fields.required'),\n                            }),\n                        ]),\n                    ]),\n                    /*m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.min_answers_count')),\n                        m('input.FormControl', {\n                            type: 'number',\n                            min: 0,\n                            max: 1, // TODO: remove when multiple answers is ready\n                            value: this.field.min_answers_count(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'min_answers_count')),\n                        }),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.max_answers_count')),\n                        m('input.FormControl', {\n                            type: 'number',\n                            min: 1,\n                            disabled: true, // TODO: remove when multiple answers is ready\n                            value: this.field.max_answers_count(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'max_answers_count')),\n                        }),\n                    ]),*/\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.show_when_empty(),\n                                onchange: this.updateAttribute.bind(this, 'show_when_empty'),\n                                children: app.translator.trans('flagrow-mason.admin.fields.show_when_empty'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.show_when_empty-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.user_values_allowed(),\n                                onchange: this.updateAttribute.bind(this, 'user_values_allowed'),\n                                children: app.translator.trans('flagrow-mason.admin.fields.user_values_allowed'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.user_values_allowed-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.validation')),\n                        m('input.FormControl', {\n                            disabled: !this.field.user_values_allowed(),\n                            placeholder: this.field.user_values_allowed() ? '' : app.translator.trans('flagrow-mason.admin.fields.enable-user-values-for-validation'),\n                            value: this.field.validation(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'validation')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.validation-help', {\n                            a: m('a[href=https://laravel.com/docs/5.1/validation#available-validation-rules][_target=blank]'),\n                        })),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            app.translator.trans('flagrow-mason.admin.fields.icon'),\n                            this.iconPreview(this.field.icon()),\n                        ]),\n                        m('input.FormControl', {\n                            value: this.field.icon(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'icon')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.icon-help', {\n                            a: m('a[href=https://fontawesome.com/icons?m=free][_target=blank]'),\n                        })),\n                    ]),\n                ]),\n                m('.Mason-Box--column', [\n                    m('h4', 'Field answers'),\n                    m('.Form-group', FieldAnswersEdit.component({\n                        field: this.field,\n                    })),\n                ]),\n            ]),\n            m('li.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.' + (this.field.exists ? 'save' : 'add') + '-field'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveField.bind(this),\n                }),\n                (this.field.exists ? Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.delete-field'),\n                    loading: this.processing,\n                    onclick: this.deleteField.bind(this),\n                }) : ''),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.field.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        // TODO: check required fields\n        return this.dirty;\n    }\n\n    saveField() {\n        this.processing = true;\n\n        const createNewRecord = !this.field.exists;\n\n        this.field.save(this.field.data.attributes).then(() => {\n            if (createNewRecord) {\n                this.initNewField();\n                this.toggleFields = false;\n            }\n\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteField() {\n        if (!confirm(app.translator.trans('flagrow-mason.admin.messages.delete-field-confirmation', {\n                name: this.field.name(),\n            }))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.field.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    iconPreview(value) {\n        if (!value) {\n            return '';\n        }\n\n        return [\n            ' (',\n            app.translator.trans('flagrow-mason.admin.fields.icon-preview', {\n                preview: icon(value),\n            }),\n            ')',\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport saveSettings from \"flarum/utils/saveSettings\";\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\n\nexport default class MasonSettings extends Component {\n    init() {\n        this.fieldsSectionTitle = m.prop(app.data.settings['flagrow.mason.fields-section-title'] || '');\n        this.columnCount = m.prop(app.data.settings['flagrow.mason.column-count'] || 1);\n        this.labelsAsPlaceholders = m.prop(app.data.settings['flagrow.mason.labels-as-placeholders'] > 0);\n        this.fieldsInHero = m.prop(app.data.settings['flagrow.mason.fields-in-hero'] > 0);\n        this.hideEmptyFieldsSection = m.prop(app.data.settings['flagrow.mason.hide-empty-fields-section'] > 0);\n        this.tagsAsFields = m.prop(app.data.settings['flagrow.mason.tags-as-fields'] > 0);\n        this.tagsFieldName = m.prop(app.data.settings['flagrow.mason.tags-field-name'] || '');\n\n        this.columnOptions = {};\n\n        for (let i = 1; i <= 3; i++) {\n            this.columnOptions[i] = app.translator.trans('flagrow-mason.admin.settings.n-columns', {count: i});\n        }\n    }\n\n    view() {\n        return m('.Mason-Container', [\n            m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.fields-section-title')),\n                m('input.FormControl', {\n                    value: this.fieldsSectionTitle(),\n                    placeholder: app.translator.trans('flagrow-mason.admin.settings.fields-section-title-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.fieldsSectionTitle, 'flagrow.mason.fields-section-title')),\n                }),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.fields-section-title-help')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.column-count')),\n                Select.component({\n                    options: this.columnOptions,\n                    value: this.columnCount(),\n                    onchange: this.updateSetting.bind(this, this.columnCount, 'flagrow.mason.column-count'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.labelsAsPlaceholders(),\n                    onchange: this.updateSetting.bind(this, this.labelsAsPlaceholders, 'flagrow.mason.labels-as-placeholders'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.labels-as-placeholders'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.labels-as-placeholders-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.fieldsInHero(),\n                    onchange: this.updateSetting.bind(this, this.fieldsInHero, 'flagrow.mason.fields-in-hero'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.fields-in-hero'),\n                })),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.hideEmptyFieldsSection(),\n                    onchange: this.updateSetting.bind(this, this.hideEmptyFieldsSection, 'flagrow.mason.hide-empty-fields-section'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.hide-empty-fields-section'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.hide-empty-fields-section-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.tagsAsFields(),\n                    onchange: this.updateSetting.bind(this, this.tagsAsFields, 'flagrow.mason.tags-as-fields'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.tags-as-field'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.tags-as-field-help')),\n            ]),\n            (this.tagsAsFields() ? m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.tags-field-name')),\n                m('input.FormControl', {\n                    value: this.tagsFieldName(),\n                    placeholder: app.translator.trans('flagrow-mason.admin.settings.tags-field-name-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.tagsFieldName, 'flagrow.mason.tags-field-name')),\n                }),\n            ]) : null),\n        ]);\n    }\n\n    /**\n     * Updates setting in database.\n     * @param prop\n     * @param setting\n     * @param value\n     */\n    updateSetting(prop, setting, value) {\n        saveSettings({\n            [setting]: value\n        });\n\n        prop(value)\n    }\n}\n","import app from 'flarum/app';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport addMasonFieldsPane from './addMasonFieldsPane';\nimport addPermissions from './addPermissions';\n\napp.initializers.add('flagrow-mason', app => {\n    app.store.models['flagrow-mason-field'] = Field;\n    app.store.models['flagrow-mason-answer'] = Answer;\n\n    addMasonFieldsPane();\n    addPermissions();\n});\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport FieldEdit from './../components/FieldEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport sortable from 'html5sortable/dist/html5sortable.es.js';\nimport MasonSettings from './../components/MasonSettings';\n\nexport default class MasonFieldsPane extends Component {\n    init() {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/flagrow/mason/fields',\n        }).then(result => {\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    config() {\n        let self = this;\n\n        sortable('.js-fields-container', {\n            handle: '.js-field-handle',\n            items: '.js-field-data',\n        }).forEach(function(el){\n            $(el).off('sortupdate').on('sortupdate', e => {\n                const sorting = e.detail.destination.items\n                    .map(item => {\n                        return $(item).data('id');\n                    });\n\n                self.updateSort(sorting);\n            });\n        });\n    }\n\n    view() {\n        const fields = app.store.all('flagrow-mason-field');\n\n        let fieldsList = [];\n\n        sortByAttribute(fields)\n            .forEach(field => {\n                // Build array of fields to show.\n                fieldsList.push(m('.js-field-data', {\n                    key: field.id(),\n                    'data-id': field.id(),\n                }, FieldEdit.component({\n                    field,\n                })));\n            });\n\n        return m('.container', [\n            m('h2', app.translator.trans('flagrow-mason.admin.titles.fields')),\n            m('.Mason-Container', [\n                m('.js-fields-container', fieldsList),\n                FieldEdit.component({\n                    key: 'new',\n                    field: null,\n                }),\n            ]),\n            m('h2', app.translator.trans('flagrow-mason.admin.titles.settings')),\n            MasonSettings.component(),\n        ]);\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/flagrow/mason/fields/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['utils/saveSettings'];"],"sourceRoot":""}