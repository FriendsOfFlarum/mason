{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/mason/webpack/bootstrap","webpack://@fof/mason/webpack/runtime/compat get default export","webpack://@fof/mason/webpack/runtime/define property getters","webpack://@fof/mason/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/mason/webpack/runtime/make namespace object","webpack://@fof/mason/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/mason/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/mason/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/mason/./src/common/models/Answer.ts","webpack://@fof/mason/external root \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/mason/./src/common/models/Field.ts","webpack://@fof/mason/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/mason/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/utils/throttleDebounce']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/mason/./src/admin/components/AnswerEdit.js","webpack://@fof/mason/./src/common/helpers/sortByAttribute.ts","webpack://@fof/mason/./src/admin/components/FieldAnswersEdit.js","webpack://@fof/mason/./src/admin/components/FieldEdit.js","webpack://@fof/mason/external root \"flarum.core.compat['common/utils/saveSettings']\"","webpack://@fof/mason/external root \"flarum.core.compat['common/components/Select']\"","webpack://@fof/mason/./src/admin/components/MasonSettings.js","webpack://@fof/mason/./src/admin/pages/MasonFieldsPage.js","webpack://@fof/mason/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport Field from './Field';\n\nexport default class Answer extends Model {\n    content = Model.attribute<string>('content');\n    is_suggested = Model.attribute<boolean>('is_suggested');\n    sort = Model.attribute<number | null>('sort');\n    field = Model.hasOne<Field>('field');\n\n    apiEndpoint() {\n        return '/fof/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/computed'];","import Model from 'flarum/common/Model';\nimport computed from 'flarum/common/utils/computed';\nimport Answer from './Answer';\n\nexport default class Field extends Model {\n    name = Model.attribute<string>('name');\n    description = Model.attribute<string | null>('description');\n    min_answers_count = Model.attribute<number>('min_answers_count');\n    max_answers_count = Model.attribute<number>('max_answers_count');\n    show_when_empty = Model.attribute<boolean>('show_when_empty');\n    user_values_allowed = Model.attribute<boolean>('user_values_allowed');\n    validation = Model.attribute<string | null>('validation');\n    icon = Model.attribute<string | null>('icon');\n    sort = Model.attribute<number | null>('sort');\n    deleted_at = Model.attribute('deleted_at', Model.transformDate);\n    allAnswers = Model.hasMany<Answer>('allAnswers');\n    suggestedAnswers = Model.hasMany<Answer>('suggestedAnswers');\n    required = computed<boolean>('min_answers_count', (min_answers_count) => min_answers_count > 0);\n    multiple = computed<boolean>('max_answers_count', (max_answers_count) => max_answers_count > 1);\n\n    apiEndpoint() {\n        return '/fof/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar _removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData,\n    _removeContainerEvents: _removeContainerEvents\n};\n\nexport default sortable;\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/throttleDebounce'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","import app from 'flarum/admin/app';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\n\nexport default class FieldEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.answer = this.attrs.answer;\n        this.dirty = false;\n        this.processing = false;\n    }\n\n    view() {\n        return (\n            <div className=\"Mason-Box\">\n                {/* Only suggested answers can be reordered */}\n                {this.answer.is_suggested() && [<span className=\"fas fa-arrows-alt Mason-Box--handle js-answer-handle\" />, ' ']}\n                <span\n                    onclick={() => {\n                        const newContent = prompt(\n                            extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer-prompt')),\n                            this.answer.content()\n                        );\n\n                        if (newContent) {\n                            this.updateAttribute('content', newContent);\n                        }\n                    }}\n                    title={extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer'))}\n                >\n                    {this.answer.content()} {icon('fas fa-pen')}\n                </span>\n                <Switch\n                    state={this.answer.is_suggested()}\n                    onchange={(value) => {\n                        this.updateAttribute('is_suggested', value);\n\n                        // Save right away, because updating the model with immediately trigger a redraw of the UI\n                        // And the unsaved state won't be preserved because the AnswerEdit component changes its place\n                        this.saveAnswer();\n                    }}\n                >\n                    {app.translator.trans('fof-mason.admin.fields.is_suggested')}\n                </Switch>\n                <div className=\"ButtonGroup\">\n                    <Button\n                        className=\"Button Button--primary\"\n                        loading={this.processing}\n                        disabled={!this.readyToSave()}\n                        onclick={this.saveAnswer.bind(this)}\n                    >\n                        {app.translator.trans('fof-mason.admin.buttons.save-answer')}\n                    </Button>\n                    <Button className=\"Button Button--danger\" loading={this.processing} onclick={this.deleteAnswer.bind(this)}>\n                        {app.translator.trans('fof-mason.admin.buttons.delete-answer')}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    updateAttribute(attribute, value) {\n        this.answer.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        return this.dirty;\n    }\n\n    saveAnswer() {\n        this.processing = true;\n\n        this.answer\n            .save(this.answer.data.attributes)\n            .then(() => {\n                this.processing = false;\n                this.dirty = false;\n\n                m.redraw();\n            })\n            .catch((err) => {\n                this.processing = false;\n\n                throw err;\n            });\n    }\n\n    deleteAnswer() {\n        if (\n            !confirm(\n                extractText(\n                    app.translator.trans('fof-mason.admin.messages.delete-answer-confirmation', {\n                        content: this.answer.content(),\n                    })\n                )\n            )\n        ) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.answer\n            .delete()\n            .then(() => {\n                this.processing = false;\n\n                m.redraw();\n            })\n            .catch((err) => {\n                this.processing = false;\n\n                throw err;\n            });\n    }\n}\n","export default function sortByAttribute<T extends { [k in K]: () => any }, K extends string | number | symbol>(items: T[], attr: K) {\n    if (!attr) attr = 'sort';\n    return items.sort((a, b) => a[attr]() - b[attr]());\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/admin/app';\nimport icon from 'flarum/common/helpers/icon';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport { debounce } from 'flarum/common/utils/throttleDebounce';\n\nimport AnswerEdit from './AnswerEdit';\nimport sortByAttribute from '@common/helpers/sortByAttribute';\n\nexport default class FieldAnswersEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.field = this.attrs.field;\n        this.processing = false;\n        this.new_content = '';\n        this.showUserAnswers = false;\n    }\n\n    configSortable() {\n        const container = this.element.querySelector('.js-answers-container');\n\n        // If the field doesn't exist, it doesn't have a field edit area\n        if (!container) {\n            return;\n        }\n\n        const el = sortable(container, {\n            handle: '.js-answer-handle',\n        })[0];\n\n        // Prevents issue with more and more event listeners\n        // being added, resulting in 100s of XHR requests.\n        el.removeEventListener('sortupdate', this.sortingChanged);\n        el.addEventListener('sortupdate', this.sortingChanged);\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.configSortable();\n    }\n\n    onupdate() {\n        this.configSortable();\n    }\n\n    view() {\n        if (!this.field.exists) {\n            return <div>{app.translator.trans('fof-mason.admin.fields.save-field-for-answers')}</div>;\n        }\n\n        let suggestedAnswers = [];\n        let userAnswers = [];\n\n        (this.field.allAnswers() || []).forEach((answer) => {\n            // When answers are deleted via store.delete() they stay as an \"undefined\" relationship\n            // We ignore these deleted answers\n            if (typeof answer === 'undefined') {\n                return;\n            }\n\n            if (answer.is_suggested()) {\n                suggestedAnswers.push(answer);\n            } else {\n                userAnswers.push(answer);\n            }\n        });\n\n        return [\n            <div>\n                <div className=\"Mason-Container js-answers-container\">\n                    {sortByAttribute(suggestedAnswers).map((answer) => (\n                        <div className=\"js-answer-data\" key={answer.id()} data-id={answer.id()}>\n                            <AnswerEdit answer={answer} />\n                        </div>\n                    ))}\n                </div>\n                {userAnswers.length && (\n                    <>\n                        <button\n                            className=\"Button Button--block Mason-Box-Header\"\n                            onclick={() => {\n                                this.showUserAnswers = !this.showUserAnswers;\n                            }}\n                        >\n                            <div className=\"Mason-Box-Header-Title\">\n                                {app.translator.trans('fof-mason.admin.buttons.show-user-answers', {\n                                    count: userAnswers.length,\n                                })}\n                            </div>\n                            <div>{icon('fas fa-chevron-' + (this.showUserAnswers ? 'up' : 'down'))}</div>\n                        </button>\n                        {this.showUserAnswers && (\n                            <div className=\"Mason-Container\">\n                                {sortByAttribute(userAnswers, 'content').map((answer) => (\n                                    <div key={answer.id()}>\n                                        <AnswerEdit answer={answer} />\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>,\n            <div className=\"Form-group\">\n                <label>\n                    {app.translator.trans('fof-mason.admin.fields.new-answer')}\n                    <input\n                        className=\"FormControl\"\n                        value={this.new_content}\n                        oninput={(e) => {\n                            this.new_content = e.target.value;\n                        }}\n                        placeholder={app.translator.trans('fof-mason.admin.fields.new-answer-placeholder')}\n                    />\n                </label>\n            </div>,\n            <div className=\"Form-group\">\n                <Button className=\"Button Button--primary\" loading={this.processing} disabled={!this.new_content} onclick={this.saveField.bind(this)}>\n                    {app.translator.trans('fof-mason.admin.buttons.add-answer')}\n                </Button>\n            </div>,\n        ];\n    }\n\n    saveField() {\n        this.processing = true;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers',\n            body: {\n                data: {\n                    attributes: {\n                        content: this.new_content,\n                        is_suggested: true,\n                    },\n                },\n            },\n        }).then((result) => {\n            app.store.pushPayload(result);\n\n            this.new_content = '';\n            this.processing = false;\n            m.redraw();\n        });\n    }\n\n    sortingChanged = debounce(500, () => {\n        const sorting = this.$('.js-answer-data')\n            .map(function () {\n                return $(this).data('id');\n            })\n            .get();\n\n        this.updateSort(sorting);\n    });\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers/order',\n            body: {\n                sort: sorting,\n            },\n        }).then((result) => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/admin/app';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\nimport FieldAnswersEdit from './FieldAnswersEdit';\n\nexport default class FieldEdit extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.field = this.attrs.field;\n        this.dirty = false;\n        this.processing = false;\n        this.toggleFields = false;\n\n        if (!this.field) {\n            this.initNewField();\n        }\n    }\n\n    initNewField() {\n        this.field = app.store.createRecord('mason-fields', {\n            attributes: {\n                name: '',\n                description: '',\n                min_answers_count: 0,\n                max_answers_count: 1, // Currently not visible in the editor\n                user_values_allowed: false,\n                show_when_empty: false,\n                validation: '',\n                icon: '',\n            },\n        });\n    }\n\n    boxTitle() {\n        if (this.field.exists) {\n            return this.field.name();\n        }\n\n        return app.translator.trans('fof-mason.admin.buttons.new-field');\n    }\n\n    view() {\n        return (\n            <div className=\"Mason-Box\">\n                {this.field.exists && <span className=\"fas fa-arrows-alt Mason-Box--handle js-field-handle\" />}\n                <button\n                    className=\"Button Button--block Mason-Box-Header\"\n                    onclick={() => {\n                        this.toggleFields = !this.toggleFields;\n                    }}\n                >\n                    <div className=\"Mason-Box-Header-Title\">{this.boxTitle()}</div>\n                    <div>\n                        {this.field.exists && app.translator.trans('fof-mason.admin.buttons.edit-field') + ' '}\n                        {icon('fas fa-chevron-' + (this.toggleFields ? 'up' : 'down'))}\n                    </div>\n                </button>\n                {this.toggleFields && this.viewFields()}\n            </div>\n        );\n    }\n\n    viewFields() {\n        return [\n            <div className=\"Mason-Box--row\">\n                <div className=\"Mason-Box--column\">\n                    <h4>{app.translator.trans('fof-mason.admin.titles.field-settings')}</h4>\n                    <div className=\"Form-group\">\n                        <label>\n                            {app.translator.trans('fof-mason.admin.fields.name')}\n                            <input\n                                className=\"FormControl\"\n                                value={this.field.name()}\n                                oninput={(event) => {\n                                    this.updateAttribute('name', event.target.value);\n                                }}\n                            />\n                            <div className=\"helpText\">{app.translator.trans('fof-mason.admin.fields.name-help')}</div>\n                        </label>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            {app.translator.trans('fof-mason.admin.fields.description')}\n                            <input\n                                className=\"FormControl\"\n                                value={this.field.description()}\n                                oninput={(event) => {\n                                    this.updateAttribute('description', event.target.value);\n                                }}\n                            />\n                            <div className=\"helpText\">{app.translator.trans('fof-mason.admin.fields.description-help')}</div>\n                        </label>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            {/* multi-answers were never implemented so min_answers_count just switches between 0 and 1 for optional and required */}\n                            <Switch\n                                state={this.field.min_answers_count() === 1}\n                                onchange={(val) => this.updateAttribute('min_answers_count', val ? 1 : 0)}\n                            >\n                                {app.translator.trans('fof-mason.admin.fields.required')}\n                            </Switch>\n                        </label>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            <Switch state={this.field.show_when_empty()} onchange={this.updateAttribute.bind(this, 'show_when_empty')}>\n                                {app.translator.trans('fof-mason.admin.fields.show_when_empty')}\n                            </Switch>\n                        </label>\n                        <div className=\"helpText\">{app.translator.trans('fof-mason.admin.fields.show_when_empty-help')}</div>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            <Switch state={this.field.user_values_allowed()} onchange={this.updateAttribute.bind(this, 'user_values_allowed')}>\n                                {app.translator.trans('fof-mason.admin.fields.user_values_allowed')}\n                            </Switch>\n                        </label>\n                        <div className=\"helpText\">{app.translator.trans('fof-mason.admin.fields.user_values_allowed-help')}</div>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            {app.translator.trans('fof-mason.admin.fields.validation')}\n                            <input\n                                className=\"FormControl\"\n                                disabled={!this.field.user_values_allowed()}\n                                placeholder={\n                                    this.field.user_values_allowed()\n                                        ? ''\n                                        : app.translator.trans('fof-mason.admin.fields.enable-user-values-for-validation')\n                                }\n                                value={this.field.validation()}\n                                oninput={(e) => {\n                                    this.updateAttribute('validation', e.target.value);\n                                }}\n                            />\n                            <div className=\"helpText\">\n                                {app.translator.trans('fof-mason.admin.fields.validation-help', {\n                                    a: <a href=\"https://laravel.com/docs/6.x/validation#available-validation-rules\" target=\"_blank\" />,\n                                })}\n                            </div>\n                        </label>\n                    </div>\n                    <div className=\"Form-group\">\n                        <label>\n                            {app.translator.trans('fof-mason.admin.fields.icon')} {this.iconPreview(this.field.icon())}\n                            <input\n                                className=\"FormControl\"\n                                value={this.field.icon()}\n                                oninput={(event) => {\n                                    this.updateAttribute('icon', event.target.value);\n                                }}\n                            />\n                        </label>\n                        <div className=\"helpText\">\n                            {app.translator.trans('fof-mason.admin.fields.icon-help', {\n                                a: <a href=\"https://fontawesome.com/icons?m=free\" target=\"_blank\" />,\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"Mason-Box--column\">\n                        <h4>{app.translator.trans('fof-mason.admin.titles.field-answers')}</h4>\n                        <div className=\"Form-group\">\n                            <FieldAnswersEdit field={this.field} />\n                        </div>\n                    </div>\n                </div>\n            </div>,\n            <div className=\"ButtonGroup\">\n                <Button\n                    className=\"Button Button--primary\"\n                    loading={this.processing}\n                    disabled={!this.readyToSave()}\n                    onclick={this.saveField.bind(this)}\n                >\n                    {app.translator.trans('fof-mason.admin.buttons.' + (this.field.exists ? 'save' : 'add') + '-field')}\n                </Button>\n\n                {this.field.exists && (\n                    <Button className=\"Button Button--danger\" loading={this.processing} onclick={this.deleteField.bind(this)}>\n                        {app.translator.trans('fof-mason.admin.buttons.delete-field')}\n                    </Button>\n                )}\n            </div>,\n        ];\n    }\n\n    updateAttribute(attribute, value) {\n        this.field.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        // TODO: check required fields\n        return this.dirty;\n    }\n\n    saveField() {\n        this.processing = true;\n\n        const createNewRecord = !this.field.exists;\n\n        this.field\n            .save(this.field.data.attributes)\n            .then(() => {\n                if (createNewRecord) {\n                    this.initNewField();\n                    this.toggleFields = false;\n                }\n\n                this.processing = false;\n                this.dirty = false;\n\n                m.redraw();\n            })\n            .catch((err) => {\n                this.processing = false;\n\n                throw err;\n            });\n    }\n\n    deleteField() {\n        if (\n            !confirm(\n                extractText(\n                    app.translator.trans('fof-mason.admin.messages.delete-field-confirmation', {\n                        name: this.field.name(),\n                    })\n                )\n            )\n        ) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.field\n            .delete()\n            .then(() => {\n                this.processing = false;\n\n                m.redraw();\n            })\n            .catch((err) => {\n                this.processing = false;\n\n                throw err;\n            });\n    }\n\n    iconPreview(value) {\n        if (!value) {\n            return '';\n        }\n\n        return [\n            ' (',\n            app.translator.trans('fof-mason.admin.fields.icon-preview', {\n                preview: icon(value),\n            }),\n            ')',\n        ];\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/saveSettings'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","import app from 'flarum/admin/app';\nimport saveSettings from 'flarum/common/utils/saveSettings';\nimport Component from 'flarum/common/Component';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\n\nexport default class MasonSettings extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.fieldsSectionTitle = app.data.settings['fof-mason.fields-section-title'] || '';\n        this.columnCount = app.data.settings['fof-mason.column-count'] || 1;\n        this.labelsAsPlaceholders = app.data.settings['fof-mason.labels-as-placeholders'] > 0;\n        this.fieldsInHero = app.data.settings['fof-mason.fields-in-hero'] > 0;\n        this.hideEmptyFieldsSection = app.data.settings['fof-mason.hide-empty-fields-section'] > 0;\n        this.tagsAsFields = app.data.settings['fof-mason.tags-as-fields'] > 0;\n        this.tagsFieldName = app.data.settings['fof-mason.tags-field-name'] || '';\n\n        this.columnOptions = {};\n\n        for (let i = 1; i <= 3; i++) {\n            this.columnOptions[i] = app.translator.trans('fof-mason.admin.settings.n-columns', { count: i });\n        }\n    }\n\n    view() {\n        return (\n            <div className=\"Mason-Container\">\n                <div className=\"Form-group\">\n                    <label>\n                        {app.translator.trans('fof-mason.admin.settings.fields-section-title')}\n                        <input\n                            className=\"FormControl\"\n                            value={this.fieldsSectionTitle}\n                            placeholder={app.translator.trans('fof-mason.admin.settings.fields-section-title-placeholder')}\n                            onchange={(event) => {\n                                this.updateSetting('fieldsSectionTitle', 'fof-mason.fields-section-title', event.target.value);\n                            }}\n                        />\n                    </label>\n                    <div className=\"helpText\">{app.translator.trans('fof-mason.admin.settings.fields-section-title-help')}</div>\n                </div>\n                <div className=\"Form-group\">\n                    <label>\n                        {app.translator.trans('fof-mason.admin.settings.column-count')},\n                        <Select\n                            options={this.columnOptions}\n                            value={this.columnCount}\n                            onchange={this.updateSetting.bind(this, 'columnCount', 'fof-mason.column-count')}\n                        />\n                    </label>\n                </div>\n                <div className=\"Form-group\">\n                    <label>\n                        <Switch\n                            state={this.labelsAsPlaceholders}\n                            onchange={this.updateSetting.bind(this, 'labelsAsPlaceholders', 'fof-mason.labels-as-placeholders')}\n                        >\n                            {app.translator.trans('fof-mason.admin.settings.labels-as-placeholders')}\n                        </Switch>\n                    </label>\n                    <div className=\"helpText\">{app.translator.trans('fof-mason.admin.settings.labels-as-placeholders-help')}</div>\n                </div>\n                <div className=\"Form-group\">\n                    <label>\n                        <Switch state={this.fieldsInHero} onchange={this.updateSetting.bind(this, 'fieldsInHero', 'fof-mason.fields-in-hero')}>\n                            {app.translator.trans('fof-mason.admin.settings.fields-in-hero')}\n                        </Switch>\n                    </label>\n                </div>\n                <div className=\"Form-group\">\n                    <label>\n                        <Switch\n                            state={this.hideEmptyFieldsSection}\n                            onchange={this.updateSetting.bind(this, 'hideEmptyFieldsSection', 'fof-mason.hide-empty-fields-section')}\n                        >\n                            {app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section')}\n                        </Switch>\n                    </label>\n                    <div className=\"helpText\">{app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section-help')}</div>\n                </div>\n                <div className=\"Form-group\">\n                    <label>\n                        <Switch state={this.tagsAsFields} onchange={this.updateSetting.bind(this, 'tagsAsFields', 'fof-mason.tags-as-fields')}>\n                            {app.translator.trans('fof-mason.admin.settings.tags-as-field')}\n                        </Switch>\n                    </label>\n                    <div className=\"helpText\">{app.translator.trans('fof-mason.admin.settings.tags-as-field-help')}</div>\n                </div>\n                {this.tagsAsFields && (\n                    <div className=\"Form-group\">\n                        <label>{app.translator.trans('fof-mason.admin.settings.tags-field-name')}</label>\n                        <input\n                            className=\"FormControl\"\n                            value={this.tagsFieldName}\n                            placeholder={app.translator.trans('fof-mason.admin.settings.tags-field-name-placeholder')}\n                            onchange={(event) => {\n                                this.updateSetting('tagsFieldName', 'fof-mason.tags-field-name', event.target.value);\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Updates setting in database.\n     * @param attribute\n     * @param setting\n     * @param value\n     */\n    updateSetting(attribute, setting, value) {\n        saveSettings({\n            [setting]: value,\n        });\n\n        this[attribute] = value;\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport { debounce } from 'flarum/common/utils/throttleDebounce';\n\nimport FieldEdit from '../components/FieldEdit';\nimport MasonSettings from '../components/MasonSettings';\nimport sortByAttribute from '@common/helpers/sortByAttribute';\n\nexport default class MasonFieldsPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields',\n        }).then((result) => {\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    configSortable() {\n        const el = sortable(this.element.querySelector('.js-fields-container'), {\n            handle: '.js-field-handle',\n        })[0];\n\n        // Prevents issue with more and more event listeners\n        // being added, resulting in 100s of XHR requests.\n        el.removeEventListener('sortupdate', this.sortingChanged);\n        el.addEventListener('sortupdate', this.sortingChanged);\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.configSortable();\n    }\n\n    onupdate() {\n        this.configSortable();\n    }\n\n    content() {\n        const fields = app.store.all('mason-fields');\n\n        let fieldsList = [];\n\n        sortByAttribute(fields).forEach((field) => {\n            // Build array of fields to show.\n            fieldsList.push(\n                <div className=\"js-field-data\" key={field.id()} data-id={field.id()}>\n                    <FieldEdit field={field} />\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"ExtensionPage-settings\">\n                <div className=\"container\">\n                    <h2>{app.translator.trans('fof-mason.admin.titles.fields')}</h2>\n                    <div className=\"Mason-Container\">\n                        <div className=\"js-fields-container\">{fieldsList}</div>\n                        <FieldEdit />\n                    </div>\n                    <h2>{app.translator.trans('fof-mason.admin.titles.settings')}</h2>\n                    <MasonSettings />\n                </div>\n            </div>\n        );\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields/order',\n            body: {\n                sort: sorting,\n            },\n        }).then((result) => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    sortingChanged = debounce(500, () => {\n        const sorting = this.$('.js-field-data')\n            .map(function () {\n                return $(this).data('id');\n            })\n            .get();\n\n        this.updateSort(sorting);\n    });\n}\n","import app from 'flarum/admin/app';\n\nimport Answer from '@common/models/Answer';\nimport Field from '@common/models/Field';\nimport MasonFieldsPage from './pages/MasonFieldsPage';\n\napp.initializers.add('fof-mason', () => {\n    app.store.models['mason-fields'] = Field;\n    app.store.models['mason-answers'] = Answer;\n\n    app.extensionData\n        .for('fof-mason')\n        .registerPage(MasonFieldsPage)\n        .registerPermission(\n            {\n                icon: 'fas fa-eye',\n                label: app.translator.trans('fof-mason.admin.permissions.see-own-fields'),\n                permission: 'fof-mason.see-own-fields',\n            },\n            'view'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-eye',\n                label: app.translator.trans('fof-mason.admin.permissions.see-other-fields'),\n                permission: 'fof-mason.see-other-fields',\n                allowGuest: true,\n            },\n            'view'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-tasks',\n                label: app.translator.trans('fof-mason.admin.permissions.fill-fields'),\n                permission: 'fof-mason.fill-fields',\n            },\n            'reply'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-edit',\n                label: app.translator.trans('fof-mason.admin.permissions.update-own-fields'),\n                permission: 'fof-mason.update-own-fields',\n            },\n            'reply'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-edit',\n                label: app.translator.trans('fof-mason.admin.permissions.update-other-fields'),\n                permission: 'fof-mason.update-other-fields',\n                allowGuest: true,\n            },\n            'moderate'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-forward',\n                label: app.translator.trans('fof-mason.admin.permissions.skip-required-fields'),\n                permission: 'fof-mason.skip-required-fields',\n            },\n            'moderate'\n        );\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Answer","_Model","_this","_len","arguments","length","args","Array","_key","apply","concat","content","Model","is_suggested","sort","field","apiEndpoint","this","exists","data","id","Field","name","description","min_answers_count","max_answers_count","show_when_empty","user_values_allowed","validation","icon","deleted_at","allAnswers","suggestedAnswers","required","computed","multiple","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","store","sortableElement","addEventListener","eventName","callback","i","removeEventListener","addAttribute","attribute","setAttribute","removeAttribute","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","getPropertyValue","parseInt","map","int","isNaN","reduce","sum","_getElementWidth","_getHandles","items","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","_removeItemEvents","_removeContainerEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","children","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","sortableContainer","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","_a","includes","classList","add","_makePlaceholder","enable","hoverClasses_1","fn","threshold","lastEventTimestamp","_i","now","Date","_throttle","buttons","_b","remove","enableHoverClass","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","destroy","_destroySortable","disable","_disableSortable","__testing","FieldEdit","_Component","_proto","oninit","vnode","answer","attrs","dirty","processing","view","m","className","onclick","newContent","prompt","extractText","app","trans","updateAttribute","title","Switch","state","onchange","saveAnswer","Button","loading","disabled","readyToSave","deleteAnswer","_this$answer$pushAttr","pushAttributes","_this2","save","attributes","then","redraw","err","_this3","confirm","Component","sortByAttribute","attr","b","FieldAnswersEdit","sortingChanged","sorting","$","updateSort","new_content","showUserAnswers","configSortable","oncreate","onupdate","userAnswers","push","AnswerEdit","'['","count","oninput","saveField","url","body","result","pushPayload","toggleFields","initNewField","createRecord","boxTitle","viewFields","val","href","iconPreview","deleteField","_this$field$pushAttri","createNewRecord","_this4","preview","MasonSettings","fieldsSectionTitle","settings","columnCount","labelsAsPlaceholders","fieldsInHero","hideEmptyFieldsSection","tagsAsFields","tagsFieldName","columnOptions","updateSetting","Select","setting","_saveSettings","saveSettings","MasonFieldsPage","_ExtensionPage","fields","all","fieldsList","ExtensionPage","models","registerPage","registerPermission","label","permission","allowGuest"],"sourceRoot":""}