{"version":3,"sources":["webpack://@fof/mason/webpack/bootstrap","webpack://@fof/mason/external \"flarum.core.compat['app']\"","webpack://@fof/mason/external \"flarum.core.compat['Model']\"","webpack://@fof/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/mason/external \"flarum.core.compat['Component']\"","webpack://@fof/mason/external \"flarum.core.compat['extend']\"","webpack://@fof/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/mason/external \"flarum.core.compat['components/Button']\"","webpack://@fof/mason/./src/lib/helpers/sortByAttribute.js","webpack://@fof/mason/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/mason/./src/lib/models/Answer.js","webpack://@fof/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/mason/./src/lib/models/Field.js","webpack://@fof/mason/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/mason/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/mason/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/mason/external \"flarum.core.compat['components/Select']\"","webpack://@fof/mason/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@fof/mason/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/mason/./src/admin/components/AnswerEdit.js","webpack://@fof/mason/./src/admin/components/FieldAnswersEdit.js","webpack://@fof/mason/./src/admin/components/FieldEdit.js","webpack://@fof/mason/./src/admin/components/MasonSettings.js","webpack://@fof/mason/./src/admin/panes/MasonFieldsPane.js","webpack://@fof/mason/./src/admin/index.js","webpack://@fof/mason/./src/admin/addMasonFieldsPane.js","webpack://@fof/mason/./src/admin/addPermissions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","items","attr","sort","a","b","Answer","apiEndpoint","this","exists","data","id","mixin","Model","content","attribute","is_suggested","field","hasOne","Field","description","min_answers_count","max_answers_count","show_when_empty","user_values_allowed","validation","icon","deleted_at","transformDate","all_answers","hasMany","suggested_answers","required","computed","multiple","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","delete","store","sortableElement","addEventListener","eventName","callback","length","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","map","int","parseInt","getPropertyValue","isNaN","reduce","sum","_getElementWidth","_getHandles","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","sortableContainer","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","arguments","now","Date","apply","_throttle","buttons","children","_a","_b","classList","remove","add","_removeItemEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","includes","_makePlaceholder","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","FieldEdit","init","answer","props","dirty","processing","view","onclick","newContent","prompt","extractText","app","translator","trans","updateAttribute","title","Switch","component","state","onchange","saveAnswer","Button","type","className","loading","disabled","readyToSave","deleteAnswer","pushAttributes","save","attributes","then","redraw","err","confirm","Component","FieldAnswersEdit","new_content","showUserAnswers","sorting","$","updateSort","suggestedAnswers","userAnswers","push","sortByAttribute","AnswerEdit","count","oninput","withAttr","saveField","request","url","forum","result","pushPayload","toggleFields","initNewField","createRecord","boxTitle","viewFields","iconPreview","deleteField","createNewRecord","preview","MasonSettings","fieldsSectionTitle","prop","settings","columnCount","labelsAsPlaceholders","fieldsInHero","hideEmptyFieldsSection","tagsAsFields","tagsFieldName","columnOptions","updateSetting","Select","setting","saveSettings","MasonFieldsPane","fields","all","fieldsList","initializers","models","routes","path","extensionSettings","route","extend","AdminNav","AdminLinkButton","href","PermissionGrid","groups","ItemList","label","permission","allowGuest","toArray"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Button'];","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['utils/ItemList'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/fof/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/extractText'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/fof/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/PermissionGrid'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nexport default sortable;\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.answer = this.props.answer;\n        this.dirty = false;\n        this.processing = false;\n    }\n\n    view() {\n        return m('form.Mason-Box', [\n            // Only suggested answers can be reordered\n            (this.answer.is_suggested() ? [\n                m('span.fas.fa-arrows-alt.Mason-Box--handle.js-answer-handle'),\n                ' ',\n            ] : null),\n            m('span', {\n                onclick: () => {\n                    const newContent = prompt(extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer-prompt')), this.answer.content());\n\n                    if (newContent) {\n                        this.updateAttribute('content', newContent);\n                    }\n                },\n                title: extractText(app.translator.trans('fof-mason.admin.buttons.edit-answer')),\n            }, [\n                this.answer.content(),\n                ' ',\n                icon('fas fa-pen'),\n            ]),\n            Switch.component({\n                state: this.answer.is_suggested(),\n                onchange: value => {\n                    this.updateAttribute('is_suggested', value);\n\n                    // Save right away, because updating the model with immediately trigger a redraw of the UI\n                    // And the unsaved state won't be preserved because the AnswerEdit component changes its place\n                    this.saveAnswer();\n                },\n                children: app.translator.trans('fof-mason.admin.fields.is_suggested'),\n            }),\n            m('.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('fof-mason.admin.buttons.save-answer'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveAnswer.bind(this),\n                }),\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('fof-mason.admin.buttons.delete-answer'),\n                    loading: this.processing,\n                    onclick: this.deleteAnswer.bind(this),\n                }),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.answer.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        return this.dirty;\n    }\n\n    saveAnswer() {\n        this.processing = true;\n\n        this.answer.save(this.answer.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteAnswer() {\n        if (!confirm(extractText(app.translator.trans('fof-mason.admin.messages.delete-answer-confirmation', {\n                content: this.answer.content(),\n            })))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.answer.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport AnswerEdit from './AnswerEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldAnswersEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.processing = false;\n        this.new_content = '';\n        this.showUserAnswers = false;\n    }\n\n    config() {\n        sortable(this.element.querySelector('.js-answers-container'), {\n            handle: '.js-answer-handle',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-answer-data')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    view() {\n        if (!this.field.exists) {\n            return m('div', app.translator.trans('fof-mason.admin.fields.save-field-for-answers'));\n        }\n\n        let suggestedAnswers = [];\n        let userAnswers = [];\n\n        this.field.all_answers()\n            .forEach(answer => {\n                // When answers are deleted via store.delete() they stay as an \"undefined\" relationship\n                // We ignore these deleted answers\n                if (typeof answer === 'undefined') {\n                    return;\n                }\n\n                if (answer.is_suggested()) {\n                    suggestedAnswers.push(answer);\n                } else {\n                    userAnswers.push(answer);\n                }\n            });\n\n        return m('div', [\n            m('.Mason-Container.js-answers-container', sortByAttribute(suggestedAnswers).map(\n                answer => m('.js-answer-data', {\n                    key: answer.id(),\n                    'data-id': answer.id(),\n                }, AnswerEdit.component({\n                    answer,\n                }))\n            )),\n            (userAnswers.length ? [\n                m('.Button.Button--block.Mason-Box-Header', {\n                    onclick: () => {\n                        this.showUserAnswers = !this.showUserAnswers;\n                    },\n                }, [\n                    m('.Mason-Box-Header-Title', app.translator.trans('fof-mason.admin.buttons.show-user-answers', {\n                        count: userAnswers.length,\n                    })),\n                    m('div', [\n                        icon('fas fa-chevron-' + (this.showUserAnswers ? 'up' : 'down')),\n                    ]),\n                ]),\n                // The list of user answers can't be re-ordered\n                (this.showUserAnswers ? m('.Mason-Container', sortByAttribute(userAnswers, 'content').map(\n                    answer => m('div', {\n                        key: answer.id(),\n                    }, AnswerEdit.component({\n                        answer,\n                    }))\n                )) : null),\n            ] : null),\n            m('form', [\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-mason.admin.fields.new-answer')),\n                    m('input.FormControl', {\n                        value: this.new_content,\n                        oninput: m.withAttr('value', value => {\n                            this.new_content = value;\n                        }),\n                        placeholder: app.translator.trans('fof-mason.admin.fields.new-answer-placeholder'),\n                    }),\n                ]),\n                m('.Form-group', [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary',\n                        children: app.translator.trans('fof-mason.admin.buttons.add-answer'),\n                        loading: this.processing,\n                        disabled: !this.new_content,\n                        onclick: this.saveField.bind(this),\n                    }),\n                ]),\n            ]),\n        ]);\n    }\n\n    saveField() {\n        this.processing = true;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers',\n            data: {\n                data: {\n                    attributes: {\n                        content: this.new_content,\n                        is_suggested: true,\n                    },\n                },\n            },\n        }).then(result => {\n            app.store.pushPayload(result);\n\n            this.new_content = '';\n            this.processing = false;\n            m.redraw();\n        });\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\nimport FieldAnswersEdit from './FieldAnswersEdit';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.dirty = false;\n        this.processing = false;\n        this.toggleFields = false;\n\n        if (this.field === null) {\n            this.initNewField();\n        }\n    }\n\n    initNewField() {\n        this.field = app.store.createRecord('mason-fields', {\n            attributes: {\n                name: '',\n                description: '',\n                min_answers_count: 0,\n                max_answers_count: 1, // Currently not visible in the editor\n                user_values_allowed: false,\n                show_when_empty: false,\n                validation: '',\n                icon: '',\n            },\n        });\n    }\n\n    boxTitle() {\n        if (this.field.exists) {\n            return this.field.name();\n        }\n\n        return app.translator.trans('fof-mason.admin.buttons.new-field');\n    }\n\n    view() {\n        return m('.Mason-Box', [\n            (this.field.exists ? m('span.fas.fa-arrows-alt.Mason-Box--handle.js-field-handle') : null),\n            m('.Button.Button--block.Mason-Box-Header', {\n                onclick: () => {\n                    this.toggleFields = !this.toggleFields;\n                },\n            }, [\n                m('.Mason-Box-Header-Title', this.boxTitle()),\n                m('div', [\n                    (this.field.exists ? [\n                        app.translator.trans('fof-mason.admin.buttons.edit-field'),\n                        ' ',\n                    ] : null),\n                    icon('fas fa-chevron-' + (this.toggleFields ? 'up' : 'down')),\n                ]),\n            ]),\n            (this.toggleFields ? this.viewFields() : null),\n        ]);\n    }\n\n    viewFields() {\n        return m('form', [\n            m('.Mason-Box--row', [\n                m('.Mason-Box--column', [\n                    m('h4', app.translator.trans('fof-mason.admin.titles.field-settings')),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.name')),\n                        m('input.FormControl', {\n                            value: this.field.name(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'name')),\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.name-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.description')),\n                        m('input.FormControl', {\n                            value: this.field.description(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'description')),\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.description-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            // multi-answers were never implemented so min_answers_count just switches between 0 and 1 for optional and required\n                            Switch.component({\n                                state: this.field.min_answers_count() === 1,\n                                onchange: value => {\n                                    this.updateAttribute('min_answers_count', value ? 1 : 0);\n                                },\n                                children: app.translator.trans('fof-mason.admin.fields.required'),\n                            }),\n                        ]),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.show_when_empty(),\n                                onchange: this.updateAttribute.bind(this, 'show_when_empty'),\n                                children: app.translator.trans('fof-mason.admin.fields.show_when_empty'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.show_when_empty-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.user_values_allowed(),\n                                onchange: this.updateAttribute.bind(this, 'user_values_allowed'),\n                                children: app.translator.trans('fof-mason.admin.fields.user_values_allowed'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.user_values_allowed-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('fof-mason.admin.fields.validation')),\n                        m('input.FormControl', {\n                            disabled: !this.field.user_values_allowed(),\n                            placeholder: this.field.user_values_allowed() ? '' : app.translator.trans('fof-mason.admin.fields.enable-user-values-for-validation'),\n                            value: this.field.validation(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'validation')),\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.validation-help', {\n                            a: m('a[href=https://laravel.com/docs/5.1/validation#available-validation-rules][_target=blank]'),\n                        })),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            app.translator.trans('fof-mason.admin.fields.icon'),\n                            this.iconPreview(this.field.icon()),\n                        ]),\n                        m('input.FormControl', {\n                            value: this.field.icon(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'icon')),\n                        }),\n                        m('.helpText', app.translator.trans('fof-mason.admin.fields.icon-help', {\n                            a: m('a[href=https://fontawesome.com/icons?m=free][_target=blank]'),\n                        })),\n                    ]),\n                ]),\n                m('.Mason-Box--column', [\n                    m('h4', app.translator.trans('fof-mason.admin.titles.field-answers')),\n                    m('.Form-group', FieldAnswersEdit.component({\n                        field: this.field,\n                    })),\n                ]),\n            ]),\n            m('li.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('fof-mason.admin.buttons.' + (this.field.exists ? 'save' : 'add') + '-field'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveField.bind(this),\n                }),\n                (this.field.exists ? Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('fof-mason.admin.buttons.delete-field'),\n                    loading: this.processing,\n                    onclick: this.deleteField.bind(this),\n                }) : ''),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.field.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        // TODO: check required fields\n        return this.dirty;\n    }\n\n    saveField() {\n        this.processing = true;\n\n        const createNewRecord = !this.field.exists;\n\n        this.field.save(this.field.data.attributes).then(() => {\n            if (createNewRecord) {\n                this.initNewField();\n                this.toggleFields = false;\n            }\n\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteField() {\n        if (!confirm(extractText(app.translator.trans('fof-mason.admin.messages.delete-field-confirmation', {\n                name: this.field.name(),\n            })))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.field.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    iconPreview(value) {\n        if (!value) {\n            return '';\n        }\n\n        return [\n            ' (',\n            app.translator.trans('fof-mason.admin.fields.icon-preview', {\n                preview: icon(value),\n            }),\n            ')',\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport saveSettings from \"flarum/utils/saveSettings\";\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\n\nexport default class MasonSettings extends Component {\n    init() {\n        this.fieldsSectionTitle = m.prop(app.data.settings['fof-mason.fields-section-title'] || '');\n        this.columnCount = m.prop(app.data.settings['fof-mason.column-count'] || 1);\n        this.labelsAsPlaceholders = m.prop(app.data.settings['fof-mason.labels-as-placeholders'] > 0);\n        this.fieldsInHero = m.prop(app.data.settings['fof-mason.fields-in-hero'] > 0);\n        this.hideEmptyFieldsSection = m.prop(app.data.settings['fof-mason.hide-empty-fields-section'] > 0);\n        this.tagsAsFields = m.prop(app.data.settings['fof-mason.tags-as-fields'] > 0);\n        this.tagsFieldName = m.prop(app.data.settings['fof-mason.tags-field-name'] || '');\n\n        this.columnOptions = {};\n\n        for (let i = 1; i <= 3; i++) {\n            this.columnOptions[i] = app.translator.trans('fof-mason.admin.settings.n-columns', {count: i});\n        }\n    }\n\n    view() {\n        return m('.Mason-Container', [\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.fields-section-title')),\n                m('input.FormControl', {\n                    value: this.fieldsSectionTitle(),\n                    placeholder: app.translator.trans('fof-mason.admin.settings.fields-section-title-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.fieldsSectionTitle, 'fof-mason.fields-section-title')),\n                }),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.fields-section-title-help')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.column-count')),\n                Select.component({\n                    options: this.columnOptions,\n                    value: this.columnCount(),\n                    onchange: this.updateSetting.bind(this, this.columnCount, 'fof-mason.column-count'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.labelsAsPlaceholders(),\n                    onchange: this.updateSetting.bind(this, this.labelsAsPlaceholders, 'fof-mason.labels-as-placeholders'),\n                    children: app.translator.trans('fof-mason.admin.settings.labels-as-placeholders'),\n                })),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.labels-as-placeholders-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.fieldsInHero(),\n                    onchange: this.updateSetting.bind(this, this.fieldsInHero, 'fof-mason.fields-in-hero'),\n                    children: app.translator.trans('fof-mason.admin.settings.fields-in-hero'),\n                })),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.hideEmptyFieldsSection(),\n                    onchange: this.updateSetting.bind(this, this.hideEmptyFieldsSection, 'fof-mason.hide-empty-fields-section'),\n                    children: app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section'),\n                })),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.hide-empty-fields-section-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.tagsAsFields(),\n                    onchange: this.updateSetting.bind(this, this.tagsAsFields, 'fof-mason.tags-as-fields'),\n                    children: app.translator.trans('fof-mason.admin.settings.tags-as-field'),\n                })),\n                m('.helpText', app.translator.trans('fof-mason.admin.settings.tags-as-field-help')),\n            ]),\n            (this.tagsAsFields() ? m('.Form-group', [\n                m('label', app.translator.trans('fof-mason.admin.settings.tags-field-name')),\n                m('input.FormControl', {\n                    value: this.tagsFieldName(),\n                    placeholder: app.translator.trans('fof-mason.admin.settings.tags-field-name-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.tagsFieldName, 'fof-mason.tags-field-name')),\n                }),\n            ]) : null),\n        ]);\n    }\n\n    /**\n     * Updates setting in database.\n     * @param prop\n     * @param setting\n     * @param value\n     */\n    updateSetting(prop, setting, value) {\n        saveSettings({\n            [setting]: value\n        });\n\n        prop(value)\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport FieldEdit from './../components/FieldEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport MasonSettings from './../components/MasonSettings';\n\nexport default class MasonFieldsPane extends Component {\n    init() {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields',\n        }).then(result => {\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    config() {\n        sortable(this.element.querySelector('.js-fields-container'), {\n            handle: '.js-field-handle',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-field-data')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    view() {\n        const fields = app.store.all('mason-fields');\n\n        let fieldsList = [];\n\n        sortByAttribute(fields)\n            .forEach(field => {\n                // Build array of fields to show.\n                fieldsList.push(m('.js-field-data', {\n                    key: field.id(),\n                    'data-id': field.id(),\n                }, FieldEdit.component({\n                    field,\n                })));\n            });\n\n        return m('.container', [\n            m('h2', app.translator.trans('fof-mason.admin.titles.fields')),\n            m('.Mason-Container', [\n                m('.js-fields-container', fieldsList),\n                FieldEdit.component({\n                    key: 'new',\n                    field: null,\n                }),\n            ]),\n            m('h2', app.translator.trans('fof-mason.admin.titles.settings')),\n            MasonSettings.component(),\n        ]);\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/fof/mason/fields/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport addMasonFieldsPane from './addMasonFieldsPane';\nimport addPermissions from './addPermissions';\n\napp.initializers.add('fof-mason', app => {\n    app.store.models['mason-fields'] = Field;\n    app.store.models['mason-answers'] = Answer;\n\n    addMasonFieldsPane();\n    addPermissions();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport MasonFieldsPane from './panes/MasonFieldsPane';\n\nexport default function () {\n    // create the route\n    app.routes['fof-mason-page'] = {\n        path: '/mason',\n        component: MasonFieldsPane.component(),\n    };\n\n    // bind the route we created to the three dots settings button\n    app.extensionSettings['fof-mason'] = () => m.route(app.route('fof-mason-page'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        // add the Image Upload tab to the admin navigation menu\n        items.add('fof-mason', AdminLinkButton.component({\n            href: app.route('fof-mason-page'),\n            icon: 'fas fa-dungeon',\n            children: 'Mason',\n            description: app.translator.trans('fof-mason.admin.menu.description'),\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport ItemList from 'flarum/utils/ItemList';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\n\nexport default function () {\n    extend(PermissionGrid.prototype, 'permissionItems', groups => {\n        const items = new ItemList();\n\n        items.add('see-own-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('fof-mason.admin.permissions.see-own-fields'),\n            permission: 'fof-mason.see-own-fields',\n        });\n        items.add('see-other-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('fof-mason.admin.permissions.see-other-fields'),\n            permission: 'fof-mason.see-other-fields',\n            allowGuest: true,\n        });\n        items.add('fill-fields', {\n            icon: 'fas fa-tasks',\n            label: app.translator.trans('fof-mason.admin.permissions.fill-fields'),\n            permission: 'fof-mason.fill-fields',\n        });\n        items.add('update-own-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('fof-mason.admin.permissions.update-own-fields'),\n            permission: 'fof-mason.update-own-fields',\n        });\n        items.add('update-other-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('fof-mason.admin.permissions.update-other-fields'),\n            permission: 'fof-mason.update-other-fields',\n            allowGuest: true,\n        });\n        items.add('skip-required-fields', {\n            icon: 'fas fa-forward',\n            label: app.translator.trans('fof-mason.admin.permissions.skip-required-fields'),\n            permission: 'fof-mason.skip-required-fields',\n        });\n\n        groups.add('fof-mason', {\n            label: app.translator.trans('fof-mason.admin.permissions.mason-heading'),\n            children: items.toArray(),\n        });\n    });\n}\n"],"sourceRoot":""}